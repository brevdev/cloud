/*
Lambda Cloud API

API for interacting with the Lambda GPU Cloud

API version: 1.5.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TerminateInstanceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TerminateInstanceRequest{}

// TerminateInstanceRequest struct for TerminateInstanceRequest
type TerminateInstanceRequest struct {
	// The unique identifiers (IDs) of the instances to terminate
	InstanceIds []string `json:"instance_ids"`
}

type _TerminateInstanceRequest TerminateInstanceRequest

// NewTerminateInstanceRequest instantiates a new TerminateInstanceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTerminateInstanceRequest(instanceIds []string) *TerminateInstanceRequest {
	this := TerminateInstanceRequest{}
	this.InstanceIds = instanceIds
	return &this
}

// NewTerminateInstanceRequestWithDefaults instantiates a new TerminateInstanceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTerminateInstanceRequestWithDefaults() *TerminateInstanceRequest {
	this := TerminateInstanceRequest{}
	return &this
}

// GetInstanceIds returns the InstanceIds field value
func (o *TerminateInstanceRequest) GetInstanceIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.InstanceIds
}

// GetInstanceIdsOk returns a tuple with the InstanceIds field value
// and a boolean to check if the value has been set.
func (o *TerminateInstanceRequest) GetInstanceIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstanceIds, true
}

// SetInstanceIds sets field value
func (o *TerminateInstanceRequest) SetInstanceIds(v []string) {
	o.InstanceIds = v
}

func (o TerminateInstanceRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TerminateInstanceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["instance_ids"] = o.InstanceIds
	return toSerialize, nil
}

func (o *TerminateInstanceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"instance_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTerminateInstanceRequest := _TerminateInstanceRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTerminateInstanceRequest)

	if err != nil {
		return err
	}

	*o = TerminateInstanceRequest(varTerminateInstanceRequest)

	return err
}

type NullableTerminateInstanceRequest struct {
	value *TerminateInstanceRequest
	isSet bool
}

func (v NullableTerminateInstanceRequest) Get() *TerminateInstanceRequest {
	return v.value
}

func (v *NullableTerminateInstanceRequest) Set(val *TerminateInstanceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTerminateInstanceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTerminateInstanceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTerminateInstanceRequest(val *TerminateInstanceRequest) *NullableTerminateInstanceRequest {
	return &NullableTerminateInstanceRequest{value: val, isSet: true}
}

func (v NullableTerminateInstanceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTerminateInstanceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
