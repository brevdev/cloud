/*
Infrastructure API

Fluidstack Infrastructure API

API version: v1alpha1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the KubernetesNodeConditionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubernetesNodeConditionsInner{}

// KubernetesNodeConditionsInner struct for KubernetesNodeConditionsInner
type KubernetesNodeConditionsInner struct {
	// Type of the condition
	Type *string `json:"type,omitempty"`
	// Status of the condition
	Status *string `json:"status,omitempty"`
	// Last time the condition was updated
	LastHeartbeatTime *time.Time `json:"lastHeartbeatTime,omitempty"`
	// Last time the condition transitioned from one status to another
	LastTransitionTime *time.Time `json:"lastTransitionTime,omitempty"`
	// Reason for the condition's last transition
	Reason *string `json:"reason,omitempty"`
	// Human-readable message indicating details about the condition
	Message              *string `json:"message,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _KubernetesNodeConditionsInner KubernetesNodeConditionsInner

// NewKubernetesNodeConditionsInner instantiates a new KubernetesNodeConditionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesNodeConditionsInner() *KubernetesNodeConditionsInner {
	this := KubernetesNodeConditionsInner{}
	return &this
}

// NewKubernetesNodeConditionsInnerWithDefaults instantiates a new KubernetesNodeConditionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesNodeConditionsInnerWithDefaults() *KubernetesNodeConditionsInner {
	this := KubernetesNodeConditionsInner{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *KubernetesNodeConditionsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesNodeConditionsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *KubernetesNodeConditionsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *KubernetesNodeConditionsInner) SetType(v string) {
	o.Type = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KubernetesNodeConditionsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesNodeConditionsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KubernetesNodeConditionsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *KubernetesNodeConditionsInner) SetStatus(v string) {
	o.Status = &v
}

// GetLastHeartbeatTime returns the LastHeartbeatTime field value if set, zero value otherwise.
func (o *KubernetesNodeConditionsInner) GetLastHeartbeatTime() time.Time {
	if o == nil || IsNil(o.LastHeartbeatTime) {
		var ret time.Time
		return ret
	}
	return *o.LastHeartbeatTime
}

// GetLastHeartbeatTimeOk returns a tuple with the LastHeartbeatTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesNodeConditionsInner) GetLastHeartbeatTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastHeartbeatTime) {
		return nil, false
	}
	return o.LastHeartbeatTime, true
}

// HasLastHeartbeatTime returns a boolean if a field has been set.
func (o *KubernetesNodeConditionsInner) HasLastHeartbeatTime() bool {
	if o != nil && !IsNil(o.LastHeartbeatTime) {
		return true
	}

	return false
}

// SetLastHeartbeatTime gets a reference to the given time.Time and assigns it to the LastHeartbeatTime field.
func (o *KubernetesNodeConditionsInner) SetLastHeartbeatTime(v time.Time) {
	o.LastHeartbeatTime = &v
}

// GetLastTransitionTime returns the LastTransitionTime field value if set, zero value otherwise.
func (o *KubernetesNodeConditionsInner) GetLastTransitionTime() time.Time {
	if o == nil || IsNil(o.LastTransitionTime) {
		var ret time.Time
		return ret
	}
	return *o.LastTransitionTime
}

// GetLastTransitionTimeOk returns a tuple with the LastTransitionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesNodeConditionsInner) GetLastTransitionTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastTransitionTime) {
		return nil, false
	}
	return o.LastTransitionTime, true
}

// HasLastTransitionTime returns a boolean if a field has been set.
func (o *KubernetesNodeConditionsInner) HasLastTransitionTime() bool {
	if o != nil && !IsNil(o.LastTransitionTime) {
		return true
	}

	return false
}

// SetLastTransitionTime gets a reference to the given time.Time and assigns it to the LastTransitionTime field.
func (o *KubernetesNodeConditionsInner) SetLastTransitionTime(v time.Time) {
	o.LastTransitionTime = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *KubernetesNodeConditionsInner) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesNodeConditionsInner) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *KubernetesNodeConditionsInner) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *KubernetesNodeConditionsInner) SetReason(v string) {
	o.Reason = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *KubernetesNodeConditionsInner) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesNodeConditionsInner) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *KubernetesNodeConditionsInner) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *KubernetesNodeConditionsInner) SetMessage(v string) {
	o.Message = &v
}

func (o KubernetesNodeConditionsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubernetesNodeConditionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.LastHeartbeatTime) {
		toSerialize["lastHeartbeatTime"] = o.LastHeartbeatTime
	}
	if !IsNil(o.LastTransitionTime) {
		toSerialize["lastTransitionTime"] = o.LastTransitionTime
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KubernetesNodeConditionsInner) UnmarshalJSON(data []byte) (err error) {
	varKubernetesNodeConditionsInner := _KubernetesNodeConditionsInner{}

	err = json.Unmarshal(data, &varKubernetesNodeConditionsInner)

	if err != nil {
		return err
	}

	*o = KubernetesNodeConditionsInner(varKubernetesNodeConditionsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "status")
		delete(additionalProperties, "lastHeartbeatTime")
		delete(additionalProperties, "lastTransitionTime")
		delete(additionalProperties, "reason")
		delete(additionalProperties, "message")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKubernetesNodeConditionsInner struct {
	value *KubernetesNodeConditionsInner
	isSet bool
}

func (v NullableKubernetesNodeConditionsInner) Get() *KubernetesNodeConditionsInner {
	return v.value
}

func (v *NullableKubernetesNodeConditionsInner) Set(val *KubernetesNodeConditionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesNodeConditionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesNodeConditionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesNodeConditionsInner(val *KubernetesNodeConditionsInner) *NullableKubernetesNodeConditionsInner {
	return &NullableKubernetesNodeConditionsInner{value: val, isSet: true}
}

func (v NullableKubernetesNodeConditionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesNodeConditionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
