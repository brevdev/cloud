/*
Infrastructure API

Fluidstack Infrastructure API

API version: v1alpha1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KubernetesNodeTaintsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubernetesNodeTaintsInner{}

// KubernetesNodeTaintsInner struct for KubernetesNodeTaintsInner
type KubernetesNodeTaintsInner struct {
	// Key of the taint
	Key *string `json:"key,omitempty"`
	// Value of the taint
	Value *string `json:"value,omitempty"`
	// Effect of the taint
	Effect               *string `json:"effect,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _KubernetesNodeTaintsInner KubernetesNodeTaintsInner

// NewKubernetesNodeTaintsInner instantiates a new KubernetesNodeTaintsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesNodeTaintsInner() *KubernetesNodeTaintsInner {
	this := KubernetesNodeTaintsInner{}
	return &this
}

// NewKubernetesNodeTaintsInnerWithDefaults instantiates a new KubernetesNodeTaintsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesNodeTaintsInnerWithDefaults() *KubernetesNodeTaintsInner {
	this := KubernetesNodeTaintsInner{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *KubernetesNodeTaintsInner) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesNodeTaintsInner) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *KubernetesNodeTaintsInner) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *KubernetesNodeTaintsInner) SetKey(v string) {
	o.Key = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *KubernetesNodeTaintsInner) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesNodeTaintsInner) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *KubernetesNodeTaintsInner) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *KubernetesNodeTaintsInner) SetValue(v string) {
	o.Value = &v
}

// GetEffect returns the Effect field value if set, zero value otherwise.
func (o *KubernetesNodeTaintsInner) GetEffect() string {
	if o == nil || IsNil(o.Effect) {
		var ret string
		return ret
	}
	return *o.Effect
}

// GetEffectOk returns a tuple with the Effect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesNodeTaintsInner) GetEffectOk() (*string, bool) {
	if o == nil || IsNil(o.Effect) {
		return nil, false
	}
	return o.Effect, true
}

// HasEffect returns a boolean if a field has been set.
func (o *KubernetesNodeTaintsInner) HasEffect() bool {
	if o != nil && !IsNil(o.Effect) {
		return true
	}

	return false
}

// SetEffect gets a reference to the given string and assigns it to the Effect field.
func (o *KubernetesNodeTaintsInner) SetEffect(v string) {
	o.Effect = &v
}

func (o KubernetesNodeTaintsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubernetesNodeTaintsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	if !IsNil(o.Effect) {
		toSerialize["effect"] = o.Effect
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KubernetesNodeTaintsInner) UnmarshalJSON(data []byte) (err error) {
	varKubernetesNodeTaintsInner := _KubernetesNodeTaintsInner{}

	err = json.Unmarshal(data, &varKubernetesNodeTaintsInner)

	if err != nil {
		return err
	}

	*o = KubernetesNodeTaintsInner(varKubernetesNodeTaintsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "key")
		delete(additionalProperties, "value")
		delete(additionalProperties, "effect")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKubernetesNodeTaintsInner struct {
	value *KubernetesNodeTaintsInner
	isSet bool
}

func (v NullableKubernetesNodeTaintsInner) Get() *KubernetesNodeTaintsInner {
	return v.value
}

func (v *NullableKubernetesNodeTaintsInner) Set(val *KubernetesNodeTaintsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesNodeTaintsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesNodeTaintsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesNodeTaintsInner(val *KubernetesNodeTaintsInner) *NullableKubernetesNodeTaintsInner {
	return &NullableKubernetesNodeTaintsInner{value: val, isSet: true}
}

func (v NullableKubernetesNodeTaintsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesNodeTaintsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
