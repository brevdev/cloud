/*
NVIDIA LaunchPad API

RESTful API for interacting with the NVIDIA LaunchPad platform

API version: 2.36.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the DeploymentPipeline type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentPipeline{}

// DeploymentPipeline struct for DeploymentPipeline
type DeploymentPipeline struct {
	// Action for the pipeline to run  * `apply` - apply * `destroy` - destroy
	Action DeploymentPipelineActionEnum `json:"action"`
	// Timestamp of when the object was created
	Created    time.Time         `json:"created"`
	Deployment ClusterDeployment `json:"deployment"`
	Id         string            `json:"id"`
	// Timestamp of when the object was last modified
	Modified time.Time `json:"modified"`
	// GitLab pipeline ID
	PipelineId int64 `json:"pipeline_id"`
	// URL for the pipeline details
	Url                  string `json:"url"`
	AdditionalProperties map[string]interface{}
}

type _DeploymentPipeline DeploymentPipeline

// NewDeploymentPipeline instantiates a new DeploymentPipeline object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentPipeline(action DeploymentPipelineActionEnum, created time.Time, deployment ClusterDeployment, id string, modified time.Time, pipelineId int64, url string) *DeploymentPipeline {
	this := DeploymentPipeline{}
	this.Action = action
	this.Created = created
	this.Deployment = deployment
	this.Id = id
	this.Modified = modified
	this.PipelineId = pipelineId
	this.Url = url
	return &this
}

// NewDeploymentPipelineWithDefaults instantiates a new DeploymentPipeline object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentPipelineWithDefaults() *DeploymentPipeline {
	this := DeploymentPipeline{}
	return &this
}

// GetAction returns the Action field value
func (o *DeploymentPipeline) GetAction() DeploymentPipelineActionEnum {
	if o == nil {
		var ret DeploymentPipelineActionEnum
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *DeploymentPipeline) GetActionOk() (*DeploymentPipelineActionEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *DeploymentPipeline) SetAction(v DeploymentPipelineActionEnum) {
	o.Action = v
}

// GetCreated returns the Created field value
func (o *DeploymentPipeline) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *DeploymentPipeline) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *DeploymentPipeline) SetCreated(v time.Time) {
	o.Created = v
}

// GetDeployment returns the Deployment field value
func (o *DeploymentPipeline) GetDeployment() ClusterDeployment {
	if o == nil {
		var ret ClusterDeployment
		return ret
	}

	return o.Deployment
}

// GetDeploymentOk returns a tuple with the Deployment field value
// and a boolean to check if the value has been set.
func (o *DeploymentPipeline) GetDeploymentOk() (*ClusterDeployment, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deployment, true
}

// SetDeployment sets field value
func (o *DeploymentPipeline) SetDeployment(v ClusterDeployment) {
	o.Deployment = v
}

// GetId returns the Id field value
func (o *DeploymentPipeline) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DeploymentPipeline) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DeploymentPipeline) SetId(v string) {
	o.Id = v
}

// GetModified returns the Modified field value
func (o *DeploymentPipeline) GetModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value
// and a boolean to check if the value has been set.
func (o *DeploymentPipeline) GetModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modified, true
}

// SetModified sets field value
func (o *DeploymentPipeline) SetModified(v time.Time) {
	o.Modified = v
}

// GetPipelineId returns the PipelineId field value
func (o *DeploymentPipeline) GetPipelineId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PipelineId
}

// GetPipelineIdOk returns a tuple with the PipelineId field value
// and a boolean to check if the value has been set.
func (o *DeploymentPipeline) GetPipelineIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PipelineId, true
}

// SetPipelineId sets field value
func (o *DeploymentPipeline) SetPipelineId(v int64) {
	o.PipelineId = v
}

// GetUrl returns the Url field value
func (o *DeploymentPipeline) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *DeploymentPipeline) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *DeploymentPipeline) SetUrl(v string) {
	o.Url = v
}

func (o DeploymentPipeline) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentPipeline) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action
	toSerialize["created"] = o.Created
	toSerialize["deployment"] = o.Deployment
	toSerialize["id"] = o.Id
	toSerialize["modified"] = o.Modified
	toSerialize["pipeline_id"] = o.PipelineId
	toSerialize["url"] = o.Url

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DeploymentPipeline) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
		"created",
		"deployment",
		"id",
		"modified",
		"pipeline_id",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeploymentPipeline := _DeploymentPipeline{}

	err = json.Unmarshal(data, &varDeploymentPipeline)

	if err != nil {
		return err
	}

	*o = DeploymentPipeline(varDeploymentPipeline)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "action")
		delete(additionalProperties, "created")
		delete(additionalProperties, "deployment")
		delete(additionalProperties, "id")
		delete(additionalProperties, "modified")
		delete(additionalProperties, "pipeline_id")
		delete(additionalProperties, "url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDeploymentPipeline struct {
	value *DeploymentPipeline
	isSet bool
}

func (v NullableDeploymentPipeline) Get() *DeploymentPipeline {
	return v.value
}

func (v *NullableDeploymentPipeline) Set(val *DeploymentPipeline) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentPipeline) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentPipeline) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentPipeline(val *DeploymentPipeline) *NullableDeploymentPipeline {
	return &NullableDeploymentPipeline{value: val, isSet: true}
}

func (v NullableDeploymentPipeline) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentPipeline) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
