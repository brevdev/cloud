/*
NVIDIA LaunchPad API

RESTful API for interacting with the NVIDIA LaunchPad platform

API version: 2.36.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the DocDeploymentDelete type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocDeploymentDelete{}

// DocDeploymentDelete struct for DocDeploymentDelete
type DocDeploymentDelete struct {
	// Override bastion operating system provisioned and/or configured by Liftoff
	BastionOperatingSystem NullableString `json:"bastion_operating_system,omitempty"`
	// Unique ID for this experience in the sales catalog. Must be unique.
	CatalogId *string `json:"catalog_id,omitempty"`
	// Human-readable identifier for the experience in the sales catalog (ex: LP-15). Must be unique.
	CatalogIdAlias NullableString     `json:"catalog_id_alias,omitempty"`
	Cluster        *DeploymentCluster `json:"cluster,omitempty"`
	// Override the Ansible collection branch initialized within the pipeline
	CollectionBranch NullableString `json:"collection_branch,omitempty"`
	// Timestamp of when the object was created
	Created    time.Time            `json:"created"`
	Experience DeploymentExperience `json:"experience"`
	// Override the experience branch
	ExperienceBranch NullableString `json:"experience_branch,omitempty"`
	ExperienceId     *string        `json:"experience_id,omitempty"`
	ExpiresAt        NullableTime   `json:"expires_at,omitempty"`
	// Override the image tag used for Flight Control
	FlightcontrolRelease NullableString `json:"flightcontrol_release,omitempty"`
	// Require a cluster with nodes in the given garage
	GarageId NullableString `json:"garage_id,omitempty"`
	// Override the default Ground Control branch
	GcBranch NullableString `json:"gc_branch,omitempty"`
	// Require a cluster with the given GPU alias
	GpuAlias NullableString `json:"gpu_alias,omitempty"`
	// Require a cluster with the given number of GPUs
	GpuCount NullableInt32 `json:"gpu_count,omitempty"`
	// Require a cluster with the given GPU model
	GpuModel     NullableString `json:"gpu_model,omitempty"`
	GpuOsName    *string        `json:"gpu_os_name,omitempty"`
	GpuOsRelease *string        `json:"gpu_os_release,omitempty"`
	GpuOsVersion *string        `json:"gpu_os_version,omitempty"`
	Id           string         `json:"id"`
	// Host IP addresses that should be allowed to access the deployment
	IpAllowlist []string `json:"ip_allowlist,omitempty"`
	// Set expires_at value to be a given number of days from the current time. A value of 0 will cause a deployment to remain active indefinitely.
	Lifetime NullableInt32 `json:"lifetime,omitempty"`
	// Require a cluster whose GPU count is greater than or equal to the given number
	MinGpuCount NullableInt32 `json:"min_gpu_count,omitempty"`
	// Timestamp of when the object was last modified
	Modified time.Time `json:"modified"`
	// Require a cluster with the given number of nodes
	NodeCount NullableInt32 `json:"node_count,omitempty"`
	// Require a cluster manufactured by the given OEM name
	OemName NullableString `json:"oem_name,omitempty"`
	// Requester's organization name
	OrgName   string      `json:"org_name"`
	Overrides interface{} `json:"overrides"`
	// Override the default cleanup/destroy behavior when a provisioning failure occurs
	PersistOnFailure NullableBool `json:"persist_on_failure,omitempty"`
	Persona          *string      `json:"persona,omitempty"`
	// Override the pipeline ID that will be triggered for request fulfillment
	Pipeline NullableInt64 `json:"pipeline,omitempty"`
	// Override the default pipeline branch ref used when triggering a Fuselage pipeline
	PipelineBranch NullableString       `json:"pipeline_branch,omitempty"`
	Pipelines      []string             `json:"pipelines"`
	Platform       NullablePlatformEnum `json:"platform,omitempty"`
	// Priority level for the request  * `p0` - p0 * `p1` - p1 * `p2` - p2 * `p3` - p3
	Priority *PriorityEnum `json:"priority,omitempty"`
	// Require a cluster from the given provider name
	ProviderName NullableString `json:"provider_name,omitempty"`
	// The initial or administrative public key used during deployment creation. Additional keys can be authorized for access using the `ssh-keys` endpoint.
	PublicKey NullableString `json:"public_key,omitempty"`
	// Require a cluster located in the given region
	Region NullableString `json:"region,omitempty"`
	// Trial request ID (ex: TRY-1234)
	RequestId *string `json:"request_id,omitempty"`
	// Email address of the user requesting the experience
	RequesterEmail string `json:"requester_email"`
	// Name of the user requesting the experience
	RequesterName string `json:"requester_name"`
	// Number of times the deployment has been retried
	RetryCount       int32        `json:"retry_count"`
	SalesCreatedDate NullableTime `json:"sales_created_date,omitempty"`
	// Unique identifier for the requester's sales relationship
	SalesId NullableString `json:"sales_id,omitempty"`
	// Email address of the sales contact associated with the requester
	SalesOwnerEmail NullableString `json:"sales_owner_email,omitempty"`
	// Name of the sales contact associated with the requester
	SalesOwnerName NullableString `json:"sales_owner_name,omitempty"`
	Services       []string       `json:"services"`
	SshPort        int32          `json:"ssh_port"`
	SshUser        string         `json:"ssh_user"`
	// Current state of the deployment  * `destroyed` - Deployment has been fully destroyed * `destroying` - Deployment is being destroyed * `error` - Deployment has encountered a fatal error and will not be retried * `failed` - Deployment has failed but may be retried * `paused` - Deployment is paused but may be retried later * `ready` - Deployment is ready and all instances are running * `retrying` - Deployment is retrying * `starting` - Deployment instances are starting * `stopped` - Deployment instances are stopped * `stopping` - Deployment instances are stopping * `waiting` - Waiting for deployment to be ready
	State DeploymentState `json:"state"`
	Tags  interface{}     `json:"tags,omitempty"`
	// Require a cluster whose workshop flag is set
	Workshop NullableBool `json:"workshop,omitempty"`
	// Require a cluster with the given workshop ID
	WorkshopId NullableString `json:"workshop_id,omitempty"`
	// Override the deployment's default authentication to use a static password. This is useful for workshops when you'd like an identical password associated with a collection of environments. (LaunchPad Team only)
	WorkshopOverridePassword NullableString `json:"workshop_override_password,omitempty"`
	AdditionalProperties     map[string]interface{}
}

type _DocDeploymentDelete DocDeploymentDelete

// NewDocDeploymentDelete instantiates a new DocDeploymentDelete object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocDeploymentDelete(created time.Time, experience DeploymentExperience, id string, modified time.Time, orgName string, overrides interface{}, pipelines []string, requesterEmail string, requesterName string, retryCount int32, services []string, sshPort int32, sshUser string, state DeploymentState) *DocDeploymentDelete {
	this := DocDeploymentDelete{}
	this.Created = created
	this.Experience = experience
	this.Id = id
	this.Modified = modified
	this.OrgName = orgName
	this.Overrides = overrides
	this.Pipelines = pipelines
	this.RequesterEmail = requesterEmail
	this.RequesterName = requesterName
	this.RetryCount = retryCount
	this.Services = services
	this.SshPort = sshPort
	this.SshUser = sshUser
	this.State = state
	return &this
}

// NewDocDeploymentDeleteWithDefaults instantiates a new DocDeploymentDelete object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocDeploymentDeleteWithDefaults() *DocDeploymentDelete {
	this := DocDeploymentDelete{}
	return &this
}

// GetBastionOperatingSystem returns the BastionOperatingSystem field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetBastionOperatingSystem() string {
	if o == nil || IsNil(o.BastionOperatingSystem.Get()) {
		var ret string
		return ret
	}
	return *o.BastionOperatingSystem.Get()
}

// GetBastionOperatingSystemOk returns a tuple with the BastionOperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetBastionOperatingSystemOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BastionOperatingSystem.Get(), o.BastionOperatingSystem.IsSet()
}

// HasBastionOperatingSystem returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasBastionOperatingSystem() bool {
	if o != nil && o.BastionOperatingSystem.IsSet() {
		return true
	}

	return false
}

// SetBastionOperatingSystem gets a reference to the given NullableString and assigns it to the BastionOperatingSystem field.
func (o *DocDeploymentDelete) SetBastionOperatingSystem(v string) {
	o.BastionOperatingSystem.Set(&v)
}

// SetBastionOperatingSystemNil sets the value for BastionOperatingSystem to be an explicit nil
func (o *DocDeploymentDelete) SetBastionOperatingSystemNil() {
	o.BastionOperatingSystem.Set(nil)
}

// UnsetBastionOperatingSystem ensures that no value is present for BastionOperatingSystem, not even an explicit nil
func (o *DocDeploymentDelete) UnsetBastionOperatingSystem() {
	o.BastionOperatingSystem.Unset()
}

// GetCatalogId returns the CatalogId field value if set, zero value otherwise.
func (o *DocDeploymentDelete) GetCatalogId() string {
	if o == nil || IsNil(o.CatalogId) {
		var ret string
		return ret
	}
	return *o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetCatalogIdOk() (*string, bool) {
	if o == nil || IsNil(o.CatalogId) {
		return nil, false
	}
	return o.CatalogId, true
}

// HasCatalogId returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasCatalogId() bool {
	if o != nil && !IsNil(o.CatalogId) {
		return true
	}

	return false
}

// SetCatalogId gets a reference to the given string and assigns it to the CatalogId field.
func (o *DocDeploymentDelete) SetCatalogId(v string) {
	o.CatalogId = &v
}

// GetCatalogIdAlias returns the CatalogIdAlias field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetCatalogIdAlias() string {
	if o == nil || IsNil(o.CatalogIdAlias.Get()) {
		var ret string
		return ret
	}
	return *o.CatalogIdAlias.Get()
}

// GetCatalogIdAliasOk returns a tuple with the CatalogIdAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetCatalogIdAliasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CatalogIdAlias.Get(), o.CatalogIdAlias.IsSet()
}

// HasCatalogIdAlias returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasCatalogIdAlias() bool {
	if o != nil && o.CatalogIdAlias.IsSet() {
		return true
	}

	return false
}

// SetCatalogIdAlias gets a reference to the given NullableString and assigns it to the CatalogIdAlias field.
func (o *DocDeploymentDelete) SetCatalogIdAlias(v string) {
	o.CatalogIdAlias.Set(&v)
}

// SetCatalogIdAliasNil sets the value for CatalogIdAlias to be an explicit nil
func (o *DocDeploymentDelete) SetCatalogIdAliasNil() {
	o.CatalogIdAlias.Set(nil)
}

// UnsetCatalogIdAlias ensures that no value is present for CatalogIdAlias, not even an explicit nil
func (o *DocDeploymentDelete) UnsetCatalogIdAlias() {
	o.CatalogIdAlias.Unset()
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *DocDeploymentDelete) GetCluster() DeploymentCluster {
	if o == nil || IsNil(o.Cluster) {
		var ret DeploymentCluster
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetClusterOk() (*DeploymentCluster, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given DeploymentCluster and assigns it to the Cluster field.
func (o *DocDeploymentDelete) SetCluster(v DeploymentCluster) {
	o.Cluster = &v
}

// GetCollectionBranch returns the CollectionBranch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetCollectionBranch() string {
	if o == nil || IsNil(o.CollectionBranch.Get()) {
		var ret string
		return ret
	}
	return *o.CollectionBranch.Get()
}

// GetCollectionBranchOk returns a tuple with the CollectionBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetCollectionBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CollectionBranch.Get(), o.CollectionBranch.IsSet()
}

// HasCollectionBranch returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasCollectionBranch() bool {
	if o != nil && o.CollectionBranch.IsSet() {
		return true
	}

	return false
}

// SetCollectionBranch gets a reference to the given NullableString and assigns it to the CollectionBranch field.
func (o *DocDeploymentDelete) SetCollectionBranch(v string) {
	o.CollectionBranch.Set(&v)
}

// SetCollectionBranchNil sets the value for CollectionBranch to be an explicit nil
func (o *DocDeploymentDelete) SetCollectionBranchNil() {
	o.CollectionBranch.Set(nil)
}

// UnsetCollectionBranch ensures that no value is present for CollectionBranch, not even an explicit nil
func (o *DocDeploymentDelete) UnsetCollectionBranch() {
	o.CollectionBranch.Unset()
}

// GetCreated returns the Created field value
func (o *DocDeploymentDelete) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *DocDeploymentDelete) SetCreated(v time.Time) {
	o.Created = v
}

// GetExperience returns the Experience field value
func (o *DocDeploymentDelete) GetExperience() DeploymentExperience {
	if o == nil {
		var ret DeploymentExperience
		return ret
	}

	return o.Experience
}

// GetExperienceOk returns a tuple with the Experience field value
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetExperienceOk() (*DeploymentExperience, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Experience, true
}

// SetExperience sets field value
func (o *DocDeploymentDelete) SetExperience(v DeploymentExperience) {
	o.Experience = v
}

// GetExperienceBranch returns the ExperienceBranch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetExperienceBranch() string {
	if o == nil || IsNil(o.ExperienceBranch.Get()) {
		var ret string
		return ret
	}
	return *o.ExperienceBranch.Get()
}

// GetExperienceBranchOk returns a tuple with the ExperienceBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetExperienceBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExperienceBranch.Get(), o.ExperienceBranch.IsSet()
}

// HasExperienceBranch returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasExperienceBranch() bool {
	if o != nil && o.ExperienceBranch.IsSet() {
		return true
	}

	return false
}

// SetExperienceBranch gets a reference to the given NullableString and assigns it to the ExperienceBranch field.
func (o *DocDeploymentDelete) SetExperienceBranch(v string) {
	o.ExperienceBranch.Set(&v)
}

// SetExperienceBranchNil sets the value for ExperienceBranch to be an explicit nil
func (o *DocDeploymentDelete) SetExperienceBranchNil() {
	o.ExperienceBranch.Set(nil)
}

// UnsetExperienceBranch ensures that no value is present for ExperienceBranch, not even an explicit nil
func (o *DocDeploymentDelete) UnsetExperienceBranch() {
	o.ExperienceBranch.Unset()
}

// GetExperienceId returns the ExperienceId field value if set, zero value otherwise.
func (o *DocDeploymentDelete) GetExperienceId() string {
	if o == nil || IsNil(o.ExperienceId) {
		var ret string
		return ret
	}
	return *o.ExperienceId
}

// GetExperienceIdOk returns a tuple with the ExperienceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetExperienceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExperienceId) {
		return nil, false
	}
	return o.ExperienceId, true
}

// HasExperienceId returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasExperienceId() bool {
	if o != nil && !IsNil(o.ExperienceId) {
		return true
	}

	return false
}

// SetExperienceId gets a reference to the given string and assigns it to the ExperienceId field.
func (o *DocDeploymentDelete) SetExperienceId(v string) {
	o.ExperienceId = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetExpiresAt() time.Time {
	if o == nil || IsNil(o.ExpiresAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt.Get()
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiresAt.Get(), o.ExpiresAt.IsSet()
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasExpiresAt() bool {
	if o != nil && o.ExpiresAt.IsSet() {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given NullableTime and assigns it to the ExpiresAt field.
func (o *DocDeploymentDelete) SetExpiresAt(v time.Time) {
	o.ExpiresAt.Set(&v)
}

// SetExpiresAtNil sets the value for ExpiresAt to be an explicit nil
func (o *DocDeploymentDelete) SetExpiresAtNil() {
	o.ExpiresAt.Set(nil)
}

// UnsetExpiresAt ensures that no value is present for ExpiresAt, not even an explicit nil
func (o *DocDeploymentDelete) UnsetExpiresAt() {
	o.ExpiresAt.Unset()
}

// GetFlightcontrolRelease returns the FlightcontrolRelease field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetFlightcontrolRelease() string {
	if o == nil || IsNil(o.FlightcontrolRelease.Get()) {
		var ret string
		return ret
	}
	return *o.FlightcontrolRelease.Get()
}

// GetFlightcontrolReleaseOk returns a tuple with the FlightcontrolRelease field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetFlightcontrolReleaseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FlightcontrolRelease.Get(), o.FlightcontrolRelease.IsSet()
}

// HasFlightcontrolRelease returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasFlightcontrolRelease() bool {
	if o != nil && o.FlightcontrolRelease.IsSet() {
		return true
	}

	return false
}

// SetFlightcontrolRelease gets a reference to the given NullableString and assigns it to the FlightcontrolRelease field.
func (o *DocDeploymentDelete) SetFlightcontrolRelease(v string) {
	o.FlightcontrolRelease.Set(&v)
}

// SetFlightcontrolReleaseNil sets the value for FlightcontrolRelease to be an explicit nil
func (o *DocDeploymentDelete) SetFlightcontrolReleaseNil() {
	o.FlightcontrolRelease.Set(nil)
}

// UnsetFlightcontrolRelease ensures that no value is present for FlightcontrolRelease, not even an explicit nil
func (o *DocDeploymentDelete) UnsetFlightcontrolRelease() {
	o.FlightcontrolRelease.Unset()
}

// GetGarageId returns the GarageId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetGarageId() string {
	if o == nil || IsNil(o.GarageId.Get()) {
		var ret string
		return ret
	}
	return *o.GarageId.Get()
}

// GetGarageIdOk returns a tuple with the GarageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetGarageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GarageId.Get(), o.GarageId.IsSet()
}

// HasGarageId returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasGarageId() bool {
	if o != nil && o.GarageId.IsSet() {
		return true
	}

	return false
}

// SetGarageId gets a reference to the given NullableString and assigns it to the GarageId field.
func (o *DocDeploymentDelete) SetGarageId(v string) {
	o.GarageId.Set(&v)
}

// SetGarageIdNil sets the value for GarageId to be an explicit nil
func (o *DocDeploymentDelete) SetGarageIdNil() {
	o.GarageId.Set(nil)
}

// UnsetGarageId ensures that no value is present for GarageId, not even an explicit nil
func (o *DocDeploymentDelete) UnsetGarageId() {
	o.GarageId.Unset()
}

// GetGcBranch returns the GcBranch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetGcBranch() string {
	if o == nil || IsNil(o.GcBranch.Get()) {
		var ret string
		return ret
	}
	return *o.GcBranch.Get()
}

// GetGcBranchOk returns a tuple with the GcBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetGcBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GcBranch.Get(), o.GcBranch.IsSet()
}

// HasGcBranch returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasGcBranch() bool {
	if o != nil && o.GcBranch.IsSet() {
		return true
	}

	return false
}

// SetGcBranch gets a reference to the given NullableString and assigns it to the GcBranch field.
func (o *DocDeploymentDelete) SetGcBranch(v string) {
	o.GcBranch.Set(&v)
}

// SetGcBranchNil sets the value for GcBranch to be an explicit nil
func (o *DocDeploymentDelete) SetGcBranchNil() {
	o.GcBranch.Set(nil)
}

// UnsetGcBranch ensures that no value is present for GcBranch, not even an explicit nil
func (o *DocDeploymentDelete) UnsetGcBranch() {
	o.GcBranch.Unset()
}

// GetGpuAlias returns the GpuAlias field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetGpuAlias() string {
	if o == nil || IsNil(o.GpuAlias.Get()) {
		var ret string
		return ret
	}
	return *o.GpuAlias.Get()
}

// GetGpuAliasOk returns a tuple with the GpuAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetGpuAliasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GpuAlias.Get(), o.GpuAlias.IsSet()
}

// HasGpuAlias returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasGpuAlias() bool {
	if o != nil && o.GpuAlias.IsSet() {
		return true
	}

	return false
}

// SetGpuAlias gets a reference to the given NullableString and assigns it to the GpuAlias field.
func (o *DocDeploymentDelete) SetGpuAlias(v string) {
	o.GpuAlias.Set(&v)
}

// SetGpuAliasNil sets the value for GpuAlias to be an explicit nil
func (o *DocDeploymentDelete) SetGpuAliasNil() {
	o.GpuAlias.Set(nil)
}

// UnsetGpuAlias ensures that no value is present for GpuAlias, not even an explicit nil
func (o *DocDeploymentDelete) UnsetGpuAlias() {
	o.GpuAlias.Unset()
}

// GetGpuCount returns the GpuCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetGpuCount() int32 {
	if o == nil || IsNil(o.GpuCount.Get()) {
		var ret int32
		return ret
	}
	return *o.GpuCount.Get()
}

// GetGpuCountOk returns a tuple with the GpuCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetGpuCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.GpuCount.Get(), o.GpuCount.IsSet()
}

// HasGpuCount returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasGpuCount() bool {
	if o != nil && o.GpuCount.IsSet() {
		return true
	}

	return false
}

// SetGpuCount gets a reference to the given NullableInt32 and assigns it to the GpuCount field.
func (o *DocDeploymentDelete) SetGpuCount(v int32) {
	o.GpuCount.Set(&v)
}

// SetGpuCountNil sets the value for GpuCount to be an explicit nil
func (o *DocDeploymentDelete) SetGpuCountNil() {
	o.GpuCount.Set(nil)
}

// UnsetGpuCount ensures that no value is present for GpuCount, not even an explicit nil
func (o *DocDeploymentDelete) UnsetGpuCount() {
	o.GpuCount.Unset()
}

// GetGpuModel returns the GpuModel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetGpuModel() string {
	if o == nil || IsNil(o.GpuModel.Get()) {
		var ret string
		return ret
	}
	return *o.GpuModel.Get()
}

// GetGpuModelOk returns a tuple with the GpuModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetGpuModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GpuModel.Get(), o.GpuModel.IsSet()
}

// HasGpuModel returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasGpuModel() bool {
	if o != nil && o.GpuModel.IsSet() {
		return true
	}

	return false
}

// SetGpuModel gets a reference to the given NullableString and assigns it to the GpuModel field.
func (o *DocDeploymentDelete) SetGpuModel(v string) {
	o.GpuModel.Set(&v)
}

// SetGpuModelNil sets the value for GpuModel to be an explicit nil
func (o *DocDeploymentDelete) SetGpuModelNil() {
	o.GpuModel.Set(nil)
}

// UnsetGpuModel ensures that no value is present for GpuModel, not even an explicit nil
func (o *DocDeploymentDelete) UnsetGpuModel() {
	o.GpuModel.Unset()
}

// GetGpuOsName returns the GpuOsName field value if set, zero value otherwise.
func (o *DocDeploymentDelete) GetGpuOsName() string {
	if o == nil || IsNil(o.GpuOsName) {
		var ret string
		return ret
	}
	return *o.GpuOsName
}

// GetGpuOsNameOk returns a tuple with the GpuOsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetGpuOsNameOk() (*string, bool) {
	if o == nil || IsNil(o.GpuOsName) {
		return nil, false
	}
	return o.GpuOsName, true
}

// HasGpuOsName returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasGpuOsName() bool {
	if o != nil && !IsNil(o.GpuOsName) {
		return true
	}

	return false
}

// SetGpuOsName gets a reference to the given string and assigns it to the GpuOsName field.
func (o *DocDeploymentDelete) SetGpuOsName(v string) {
	o.GpuOsName = &v
}

// GetGpuOsRelease returns the GpuOsRelease field value if set, zero value otherwise.
func (o *DocDeploymentDelete) GetGpuOsRelease() string {
	if o == nil || IsNil(o.GpuOsRelease) {
		var ret string
		return ret
	}
	return *o.GpuOsRelease
}

// GetGpuOsReleaseOk returns a tuple with the GpuOsRelease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetGpuOsReleaseOk() (*string, bool) {
	if o == nil || IsNil(o.GpuOsRelease) {
		return nil, false
	}
	return o.GpuOsRelease, true
}

// HasGpuOsRelease returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasGpuOsRelease() bool {
	if o != nil && !IsNil(o.GpuOsRelease) {
		return true
	}

	return false
}

// SetGpuOsRelease gets a reference to the given string and assigns it to the GpuOsRelease field.
func (o *DocDeploymentDelete) SetGpuOsRelease(v string) {
	o.GpuOsRelease = &v
}

// GetGpuOsVersion returns the GpuOsVersion field value if set, zero value otherwise.
func (o *DocDeploymentDelete) GetGpuOsVersion() string {
	if o == nil || IsNil(o.GpuOsVersion) {
		var ret string
		return ret
	}
	return *o.GpuOsVersion
}

// GetGpuOsVersionOk returns a tuple with the GpuOsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetGpuOsVersionOk() (*string, bool) {
	if o == nil || IsNil(o.GpuOsVersion) {
		return nil, false
	}
	return o.GpuOsVersion, true
}

// HasGpuOsVersion returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasGpuOsVersion() bool {
	if o != nil && !IsNil(o.GpuOsVersion) {
		return true
	}

	return false
}

// SetGpuOsVersion gets a reference to the given string and assigns it to the GpuOsVersion field.
func (o *DocDeploymentDelete) SetGpuOsVersion(v string) {
	o.GpuOsVersion = &v
}

// GetId returns the Id field value
func (o *DocDeploymentDelete) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DocDeploymentDelete) SetId(v string) {
	o.Id = v
}

// GetIpAllowlist returns the IpAllowlist field value if set, zero value otherwise.
func (o *DocDeploymentDelete) GetIpAllowlist() []string {
	if o == nil || IsNil(o.IpAllowlist) {
		var ret []string
		return ret
	}
	return o.IpAllowlist
}

// GetIpAllowlistOk returns a tuple with the IpAllowlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetIpAllowlistOk() ([]string, bool) {
	if o == nil || IsNil(o.IpAllowlist) {
		return nil, false
	}
	return o.IpAllowlist, true
}

// HasIpAllowlist returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasIpAllowlist() bool {
	if o != nil && !IsNil(o.IpAllowlist) {
		return true
	}

	return false
}

// SetIpAllowlist gets a reference to the given []string and assigns it to the IpAllowlist field.
func (o *DocDeploymentDelete) SetIpAllowlist(v []string) {
	o.IpAllowlist = v
}

// GetLifetime returns the Lifetime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetLifetime() int32 {
	if o == nil || IsNil(o.Lifetime.Get()) {
		var ret int32
		return ret
	}
	return *o.Lifetime.Get()
}

// GetLifetimeOk returns a tuple with the Lifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetLifetimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lifetime.Get(), o.Lifetime.IsSet()
}

// HasLifetime returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasLifetime() bool {
	if o != nil && o.Lifetime.IsSet() {
		return true
	}

	return false
}

// SetLifetime gets a reference to the given NullableInt32 and assigns it to the Lifetime field.
func (o *DocDeploymentDelete) SetLifetime(v int32) {
	o.Lifetime.Set(&v)
}

// SetLifetimeNil sets the value for Lifetime to be an explicit nil
func (o *DocDeploymentDelete) SetLifetimeNil() {
	o.Lifetime.Set(nil)
}

// UnsetLifetime ensures that no value is present for Lifetime, not even an explicit nil
func (o *DocDeploymentDelete) UnsetLifetime() {
	o.Lifetime.Unset()
}

// GetMinGpuCount returns the MinGpuCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetMinGpuCount() int32 {
	if o == nil || IsNil(o.MinGpuCount.Get()) {
		var ret int32
		return ret
	}
	return *o.MinGpuCount.Get()
}

// GetMinGpuCountOk returns a tuple with the MinGpuCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetMinGpuCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinGpuCount.Get(), o.MinGpuCount.IsSet()
}

// HasMinGpuCount returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasMinGpuCount() bool {
	if o != nil && o.MinGpuCount.IsSet() {
		return true
	}

	return false
}

// SetMinGpuCount gets a reference to the given NullableInt32 and assigns it to the MinGpuCount field.
func (o *DocDeploymentDelete) SetMinGpuCount(v int32) {
	o.MinGpuCount.Set(&v)
}

// SetMinGpuCountNil sets the value for MinGpuCount to be an explicit nil
func (o *DocDeploymentDelete) SetMinGpuCountNil() {
	o.MinGpuCount.Set(nil)
}

// UnsetMinGpuCount ensures that no value is present for MinGpuCount, not even an explicit nil
func (o *DocDeploymentDelete) UnsetMinGpuCount() {
	o.MinGpuCount.Unset()
}

// GetModified returns the Modified field value
func (o *DocDeploymentDelete) GetModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modified, true
}

// SetModified sets field value
func (o *DocDeploymentDelete) SetModified(v time.Time) {
	o.Modified = v
}

// GetNodeCount returns the NodeCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetNodeCount() int32 {
	if o == nil || IsNil(o.NodeCount.Get()) {
		var ret int32
		return ret
	}
	return *o.NodeCount.Get()
}

// GetNodeCountOk returns a tuple with the NodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetNodeCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NodeCount.Get(), o.NodeCount.IsSet()
}

// HasNodeCount returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasNodeCount() bool {
	if o != nil && o.NodeCount.IsSet() {
		return true
	}

	return false
}

// SetNodeCount gets a reference to the given NullableInt32 and assigns it to the NodeCount field.
func (o *DocDeploymentDelete) SetNodeCount(v int32) {
	o.NodeCount.Set(&v)
}

// SetNodeCountNil sets the value for NodeCount to be an explicit nil
func (o *DocDeploymentDelete) SetNodeCountNil() {
	o.NodeCount.Set(nil)
}

// UnsetNodeCount ensures that no value is present for NodeCount, not even an explicit nil
func (o *DocDeploymentDelete) UnsetNodeCount() {
	o.NodeCount.Unset()
}

// GetOemName returns the OemName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetOemName() string {
	if o == nil || IsNil(o.OemName.Get()) {
		var ret string
		return ret
	}
	return *o.OemName.Get()
}

// GetOemNameOk returns a tuple with the OemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetOemNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OemName.Get(), o.OemName.IsSet()
}

// HasOemName returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasOemName() bool {
	if o != nil && o.OemName.IsSet() {
		return true
	}

	return false
}

// SetOemName gets a reference to the given NullableString and assigns it to the OemName field.
func (o *DocDeploymentDelete) SetOemName(v string) {
	o.OemName.Set(&v)
}

// SetOemNameNil sets the value for OemName to be an explicit nil
func (o *DocDeploymentDelete) SetOemNameNil() {
	o.OemName.Set(nil)
}

// UnsetOemName ensures that no value is present for OemName, not even an explicit nil
func (o *DocDeploymentDelete) UnsetOemName() {
	o.OemName.Unset()
}

// GetOrgName returns the OrgName field value
func (o *DocDeploymentDelete) GetOrgName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetOrgNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgName, true
}

// SetOrgName sets field value
func (o *DocDeploymentDelete) SetOrgName(v string) {
	o.OrgName = v
}

// GetOverrides returns the Overrides field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *DocDeploymentDelete) GetOverrides() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Overrides
}

// GetOverridesOk returns a tuple with the Overrides field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetOverridesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Overrides) {
		return nil, false
	}
	return &o.Overrides, true
}

// SetOverrides sets field value
func (o *DocDeploymentDelete) SetOverrides(v interface{}) {
	o.Overrides = v
}

// GetPersistOnFailure returns the PersistOnFailure field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetPersistOnFailure() bool {
	if o == nil || IsNil(o.PersistOnFailure.Get()) {
		var ret bool
		return ret
	}
	return *o.PersistOnFailure.Get()
}

// GetPersistOnFailureOk returns a tuple with the PersistOnFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetPersistOnFailureOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PersistOnFailure.Get(), o.PersistOnFailure.IsSet()
}

// HasPersistOnFailure returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasPersistOnFailure() bool {
	if o != nil && o.PersistOnFailure.IsSet() {
		return true
	}

	return false
}

// SetPersistOnFailure gets a reference to the given NullableBool and assigns it to the PersistOnFailure field.
func (o *DocDeploymentDelete) SetPersistOnFailure(v bool) {
	o.PersistOnFailure.Set(&v)
}

// SetPersistOnFailureNil sets the value for PersistOnFailure to be an explicit nil
func (o *DocDeploymentDelete) SetPersistOnFailureNil() {
	o.PersistOnFailure.Set(nil)
}

// UnsetPersistOnFailure ensures that no value is present for PersistOnFailure, not even an explicit nil
func (o *DocDeploymentDelete) UnsetPersistOnFailure() {
	o.PersistOnFailure.Unset()
}

// GetPersona returns the Persona field value if set, zero value otherwise.
func (o *DocDeploymentDelete) GetPersona() string {
	if o == nil || IsNil(o.Persona) {
		var ret string
		return ret
	}
	return *o.Persona
}

// GetPersonaOk returns a tuple with the Persona field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetPersonaOk() (*string, bool) {
	if o == nil || IsNil(o.Persona) {
		return nil, false
	}
	return o.Persona, true
}

// HasPersona returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasPersona() bool {
	if o != nil && !IsNil(o.Persona) {
		return true
	}

	return false
}

// SetPersona gets a reference to the given string and assigns it to the Persona field.
func (o *DocDeploymentDelete) SetPersona(v string) {
	o.Persona = &v
}

// GetPipeline returns the Pipeline field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetPipeline() int64 {
	if o == nil || IsNil(o.Pipeline.Get()) {
		var ret int64
		return ret
	}
	return *o.Pipeline.Get()
}

// GetPipelineOk returns a tuple with the Pipeline field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetPipelineOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pipeline.Get(), o.Pipeline.IsSet()
}

// HasPipeline returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasPipeline() bool {
	if o != nil && o.Pipeline.IsSet() {
		return true
	}

	return false
}

// SetPipeline gets a reference to the given NullableInt64 and assigns it to the Pipeline field.
func (o *DocDeploymentDelete) SetPipeline(v int64) {
	o.Pipeline.Set(&v)
}

// SetPipelineNil sets the value for Pipeline to be an explicit nil
func (o *DocDeploymentDelete) SetPipelineNil() {
	o.Pipeline.Set(nil)
}

// UnsetPipeline ensures that no value is present for Pipeline, not even an explicit nil
func (o *DocDeploymentDelete) UnsetPipeline() {
	o.Pipeline.Unset()
}

// GetPipelineBranch returns the PipelineBranch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetPipelineBranch() string {
	if o == nil || IsNil(o.PipelineBranch.Get()) {
		var ret string
		return ret
	}
	return *o.PipelineBranch.Get()
}

// GetPipelineBranchOk returns a tuple with the PipelineBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetPipelineBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PipelineBranch.Get(), o.PipelineBranch.IsSet()
}

// HasPipelineBranch returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasPipelineBranch() bool {
	if o != nil && o.PipelineBranch.IsSet() {
		return true
	}

	return false
}

// SetPipelineBranch gets a reference to the given NullableString and assigns it to the PipelineBranch field.
func (o *DocDeploymentDelete) SetPipelineBranch(v string) {
	o.PipelineBranch.Set(&v)
}

// SetPipelineBranchNil sets the value for PipelineBranch to be an explicit nil
func (o *DocDeploymentDelete) SetPipelineBranchNil() {
	o.PipelineBranch.Set(nil)
}

// UnsetPipelineBranch ensures that no value is present for PipelineBranch, not even an explicit nil
func (o *DocDeploymentDelete) UnsetPipelineBranch() {
	o.PipelineBranch.Unset()
}

// GetPipelines returns the Pipelines field value
func (o *DocDeploymentDelete) GetPipelines() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Pipelines
}

// GetPipelinesOk returns a tuple with the Pipelines field value
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetPipelinesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pipelines, true
}

// SetPipelines sets field value
func (o *DocDeploymentDelete) SetPipelines(v []string) {
	o.Pipelines = v
}

// GetPlatform returns the Platform field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetPlatform() PlatformEnum {
	if o == nil || IsNil(o.Platform.Get()) {
		var ret PlatformEnum
		return ret
	}
	return *o.Platform.Get()
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetPlatformOk() (*PlatformEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.Platform.Get(), o.Platform.IsSet()
}

// HasPlatform returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasPlatform() bool {
	if o != nil && o.Platform.IsSet() {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given NullablePlatformEnum and assigns it to the Platform field.
func (o *DocDeploymentDelete) SetPlatform(v PlatformEnum) {
	o.Platform.Set(&v)
}

// SetPlatformNil sets the value for Platform to be an explicit nil
func (o *DocDeploymentDelete) SetPlatformNil() {
	o.Platform.Set(nil)
}

// UnsetPlatform ensures that no value is present for Platform, not even an explicit nil
func (o *DocDeploymentDelete) UnsetPlatform() {
	o.Platform.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *DocDeploymentDelete) GetPriority() PriorityEnum {
	if o == nil || IsNil(o.Priority) {
		var ret PriorityEnum
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetPriorityOk() (*PriorityEnum, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given PriorityEnum and assigns it to the Priority field.
func (o *DocDeploymentDelete) SetPriority(v PriorityEnum) {
	o.Priority = &v
}

// GetProviderName returns the ProviderName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetProviderName() string {
	if o == nil || IsNil(o.ProviderName.Get()) {
		var ret string
		return ret
	}
	return *o.ProviderName.Get()
}

// GetProviderNameOk returns a tuple with the ProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetProviderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProviderName.Get(), o.ProviderName.IsSet()
}

// HasProviderName returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasProviderName() bool {
	if o != nil && o.ProviderName.IsSet() {
		return true
	}

	return false
}

// SetProviderName gets a reference to the given NullableString and assigns it to the ProviderName field.
func (o *DocDeploymentDelete) SetProviderName(v string) {
	o.ProviderName.Set(&v)
}

// SetProviderNameNil sets the value for ProviderName to be an explicit nil
func (o *DocDeploymentDelete) SetProviderNameNil() {
	o.ProviderName.Set(nil)
}

// UnsetProviderName ensures that no value is present for ProviderName, not even an explicit nil
func (o *DocDeploymentDelete) UnsetProviderName() {
	o.ProviderName.Unset()
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetPublicKey() string {
	if o == nil || IsNil(o.PublicKey.Get()) {
		var ret string
		return ret
	}
	return *o.PublicKey.Get()
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicKey.Get(), o.PublicKey.IsSet()
}

// HasPublicKey returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasPublicKey() bool {
	if o != nil && o.PublicKey.IsSet() {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given NullableString and assigns it to the PublicKey field.
func (o *DocDeploymentDelete) SetPublicKey(v string) {
	o.PublicKey.Set(&v)
}

// SetPublicKeyNil sets the value for PublicKey to be an explicit nil
func (o *DocDeploymentDelete) SetPublicKeyNil() {
	o.PublicKey.Set(nil)
}

// UnsetPublicKey ensures that no value is present for PublicKey, not even an explicit nil
func (o *DocDeploymentDelete) UnsetPublicKey() {
	o.PublicKey.Unset()
}

// GetRegion returns the Region field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetRegion() string {
	if o == nil || IsNil(o.Region.Get()) {
		var ret string
		return ret
	}
	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// HasRegion returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasRegion() bool {
	if o != nil && o.Region.IsSet() {
		return true
	}

	return false
}

// SetRegion gets a reference to the given NullableString and assigns it to the Region field.
func (o *DocDeploymentDelete) SetRegion(v string) {
	o.Region.Set(&v)
}

// SetRegionNil sets the value for Region to be an explicit nil
func (o *DocDeploymentDelete) SetRegionNil() {
	o.Region.Set(nil)
}

// UnsetRegion ensures that no value is present for Region, not even an explicit nil
func (o *DocDeploymentDelete) UnsetRegion() {
	o.Region.Unset()
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *DocDeploymentDelete) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *DocDeploymentDelete) SetRequestId(v string) {
	o.RequestId = &v
}

// GetRequesterEmail returns the RequesterEmail field value
func (o *DocDeploymentDelete) GetRequesterEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequesterEmail
}

// GetRequesterEmailOk returns a tuple with the RequesterEmail field value
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetRequesterEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequesterEmail, true
}

// SetRequesterEmail sets field value
func (o *DocDeploymentDelete) SetRequesterEmail(v string) {
	o.RequesterEmail = v
}

// GetRequesterName returns the RequesterName field value
func (o *DocDeploymentDelete) GetRequesterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequesterName
}

// GetRequesterNameOk returns a tuple with the RequesterName field value
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetRequesterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequesterName, true
}

// SetRequesterName sets field value
func (o *DocDeploymentDelete) SetRequesterName(v string) {
	o.RequesterName = v
}

// GetRetryCount returns the RetryCount field value
func (o *DocDeploymentDelete) GetRetryCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RetryCount
}

// GetRetryCountOk returns a tuple with the RetryCount field value
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetRetryCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RetryCount, true
}

// SetRetryCount sets field value
func (o *DocDeploymentDelete) SetRetryCount(v int32) {
	o.RetryCount = v
}

// GetSalesCreatedDate returns the SalesCreatedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetSalesCreatedDate() time.Time {
	if o == nil || IsNil(o.SalesCreatedDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.SalesCreatedDate.Get()
}

// GetSalesCreatedDateOk returns a tuple with the SalesCreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetSalesCreatedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.SalesCreatedDate.Get(), o.SalesCreatedDate.IsSet()
}

// HasSalesCreatedDate returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasSalesCreatedDate() bool {
	if o != nil && o.SalesCreatedDate.IsSet() {
		return true
	}

	return false
}

// SetSalesCreatedDate gets a reference to the given NullableTime and assigns it to the SalesCreatedDate field.
func (o *DocDeploymentDelete) SetSalesCreatedDate(v time.Time) {
	o.SalesCreatedDate.Set(&v)
}

// SetSalesCreatedDateNil sets the value for SalesCreatedDate to be an explicit nil
func (o *DocDeploymentDelete) SetSalesCreatedDateNil() {
	o.SalesCreatedDate.Set(nil)
}

// UnsetSalesCreatedDate ensures that no value is present for SalesCreatedDate, not even an explicit nil
func (o *DocDeploymentDelete) UnsetSalesCreatedDate() {
	o.SalesCreatedDate.Unset()
}

// GetSalesId returns the SalesId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetSalesId() string {
	if o == nil || IsNil(o.SalesId.Get()) {
		var ret string
		return ret
	}
	return *o.SalesId.Get()
}

// GetSalesIdOk returns a tuple with the SalesId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetSalesIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SalesId.Get(), o.SalesId.IsSet()
}

// HasSalesId returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasSalesId() bool {
	if o != nil && o.SalesId.IsSet() {
		return true
	}

	return false
}

// SetSalesId gets a reference to the given NullableString and assigns it to the SalesId field.
func (o *DocDeploymentDelete) SetSalesId(v string) {
	o.SalesId.Set(&v)
}

// SetSalesIdNil sets the value for SalesId to be an explicit nil
func (o *DocDeploymentDelete) SetSalesIdNil() {
	o.SalesId.Set(nil)
}

// UnsetSalesId ensures that no value is present for SalesId, not even an explicit nil
func (o *DocDeploymentDelete) UnsetSalesId() {
	o.SalesId.Unset()
}

// GetSalesOwnerEmail returns the SalesOwnerEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetSalesOwnerEmail() string {
	if o == nil || IsNil(o.SalesOwnerEmail.Get()) {
		var ret string
		return ret
	}
	return *o.SalesOwnerEmail.Get()
}

// GetSalesOwnerEmailOk returns a tuple with the SalesOwnerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetSalesOwnerEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SalesOwnerEmail.Get(), o.SalesOwnerEmail.IsSet()
}

// HasSalesOwnerEmail returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasSalesOwnerEmail() bool {
	if o != nil && o.SalesOwnerEmail.IsSet() {
		return true
	}

	return false
}

// SetSalesOwnerEmail gets a reference to the given NullableString and assigns it to the SalesOwnerEmail field.
func (o *DocDeploymentDelete) SetSalesOwnerEmail(v string) {
	o.SalesOwnerEmail.Set(&v)
}

// SetSalesOwnerEmailNil sets the value for SalesOwnerEmail to be an explicit nil
func (o *DocDeploymentDelete) SetSalesOwnerEmailNil() {
	o.SalesOwnerEmail.Set(nil)
}

// UnsetSalesOwnerEmail ensures that no value is present for SalesOwnerEmail, not even an explicit nil
func (o *DocDeploymentDelete) UnsetSalesOwnerEmail() {
	o.SalesOwnerEmail.Unset()
}

// GetSalesOwnerName returns the SalesOwnerName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetSalesOwnerName() string {
	if o == nil || IsNil(o.SalesOwnerName.Get()) {
		var ret string
		return ret
	}
	return *o.SalesOwnerName.Get()
}

// GetSalesOwnerNameOk returns a tuple with the SalesOwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetSalesOwnerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SalesOwnerName.Get(), o.SalesOwnerName.IsSet()
}

// HasSalesOwnerName returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasSalesOwnerName() bool {
	if o != nil && o.SalesOwnerName.IsSet() {
		return true
	}

	return false
}

// SetSalesOwnerName gets a reference to the given NullableString and assigns it to the SalesOwnerName field.
func (o *DocDeploymentDelete) SetSalesOwnerName(v string) {
	o.SalesOwnerName.Set(&v)
}

// SetSalesOwnerNameNil sets the value for SalesOwnerName to be an explicit nil
func (o *DocDeploymentDelete) SetSalesOwnerNameNil() {
	o.SalesOwnerName.Set(nil)
}

// UnsetSalesOwnerName ensures that no value is present for SalesOwnerName, not even an explicit nil
func (o *DocDeploymentDelete) UnsetSalesOwnerName() {
	o.SalesOwnerName.Unset()
}

// GetServices returns the Services field value
func (o *DocDeploymentDelete) GetServices() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Services
}

// GetServicesOk returns a tuple with the Services field value
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetServicesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Services, true
}

// SetServices sets field value
func (o *DocDeploymentDelete) SetServices(v []string) {
	o.Services = v
}

// GetSshPort returns the SshPort field value
func (o *DocDeploymentDelete) GetSshPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SshPort
}

// GetSshPortOk returns a tuple with the SshPort field value
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetSshPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SshPort, true
}

// SetSshPort sets field value
func (o *DocDeploymentDelete) SetSshPort(v int32) {
	o.SshPort = v
}

// GetSshUser returns the SshUser field value
func (o *DocDeploymentDelete) GetSshUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SshUser
}

// GetSshUserOk returns a tuple with the SshUser field value
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetSshUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SshUser, true
}

// SetSshUser sets field value
func (o *DocDeploymentDelete) SetSshUser(v string) {
	o.SshUser = v
}

// GetState returns the State field value
func (o *DocDeploymentDelete) GetState() DeploymentState {
	if o == nil {
		var ret DeploymentState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *DocDeploymentDelete) GetStateOk() (*DeploymentState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *DocDeploymentDelete) SetState(v DeploymentState) {
	o.State = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetTags() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetTagsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return &o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given interface{} and assigns it to the Tags field.
func (o *DocDeploymentDelete) SetTags(v interface{}) {
	o.Tags = v
}

// GetWorkshop returns the Workshop field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetWorkshop() bool {
	if o == nil || IsNil(o.Workshop.Get()) {
		var ret bool
		return ret
	}
	return *o.Workshop.Get()
}

// GetWorkshopOk returns a tuple with the Workshop field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetWorkshopOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Workshop.Get(), o.Workshop.IsSet()
}

// HasWorkshop returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasWorkshop() bool {
	if o != nil && o.Workshop.IsSet() {
		return true
	}

	return false
}

// SetWorkshop gets a reference to the given NullableBool and assigns it to the Workshop field.
func (o *DocDeploymentDelete) SetWorkshop(v bool) {
	o.Workshop.Set(&v)
}

// SetWorkshopNil sets the value for Workshop to be an explicit nil
func (o *DocDeploymentDelete) SetWorkshopNil() {
	o.Workshop.Set(nil)
}

// UnsetWorkshop ensures that no value is present for Workshop, not even an explicit nil
func (o *DocDeploymentDelete) UnsetWorkshop() {
	o.Workshop.Unset()
}

// GetWorkshopId returns the WorkshopId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetWorkshopId() string {
	if o == nil || IsNil(o.WorkshopId.Get()) {
		var ret string
		return ret
	}
	return *o.WorkshopId.Get()
}

// GetWorkshopIdOk returns a tuple with the WorkshopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetWorkshopIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkshopId.Get(), o.WorkshopId.IsSet()
}

// HasWorkshopId returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasWorkshopId() bool {
	if o != nil && o.WorkshopId.IsSet() {
		return true
	}

	return false
}

// SetWorkshopId gets a reference to the given NullableString and assigns it to the WorkshopId field.
func (o *DocDeploymentDelete) SetWorkshopId(v string) {
	o.WorkshopId.Set(&v)
}

// SetWorkshopIdNil sets the value for WorkshopId to be an explicit nil
func (o *DocDeploymentDelete) SetWorkshopIdNil() {
	o.WorkshopId.Set(nil)
}

// UnsetWorkshopId ensures that no value is present for WorkshopId, not even an explicit nil
func (o *DocDeploymentDelete) UnsetWorkshopId() {
	o.WorkshopId.Unset()
}

// GetWorkshopOverridePassword returns the WorkshopOverridePassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocDeploymentDelete) GetWorkshopOverridePassword() string {
	if o == nil || IsNil(o.WorkshopOverridePassword.Get()) {
		var ret string
		return ret
	}
	return *o.WorkshopOverridePassword.Get()
}

// GetWorkshopOverridePasswordOk returns a tuple with the WorkshopOverridePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocDeploymentDelete) GetWorkshopOverridePasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkshopOverridePassword.Get(), o.WorkshopOverridePassword.IsSet()
}

// HasWorkshopOverridePassword returns a boolean if a field has been set.
func (o *DocDeploymentDelete) HasWorkshopOverridePassword() bool {
	if o != nil && o.WorkshopOverridePassword.IsSet() {
		return true
	}

	return false
}

// SetWorkshopOverridePassword gets a reference to the given NullableString and assigns it to the WorkshopOverridePassword field.
func (o *DocDeploymentDelete) SetWorkshopOverridePassword(v string) {
	o.WorkshopOverridePassword.Set(&v)
}

// SetWorkshopOverridePasswordNil sets the value for WorkshopOverridePassword to be an explicit nil
func (o *DocDeploymentDelete) SetWorkshopOverridePasswordNil() {
	o.WorkshopOverridePassword.Set(nil)
}

// UnsetWorkshopOverridePassword ensures that no value is present for WorkshopOverridePassword, not even an explicit nil
func (o *DocDeploymentDelete) UnsetWorkshopOverridePassword() {
	o.WorkshopOverridePassword.Unset()
}

func (o DocDeploymentDelete) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocDeploymentDelete) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.BastionOperatingSystem.IsSet() {
		toSerialize["bastion_operating_system"] = o.BastionOperatingSystem.Get()
	}
	if !IsNil(o.CatalogId) {
		toSerialize["catalog_id"] = o.CatalogId
	}
	if o.CatalogIdAlias.IsSet() {
		toSerialize["catalog_id_alias"] = o.CatalogIdAlias.Get()
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if o.CollectionBranch.IsSet() {
		toSerialize["collection_branch"] = o.CollectionBranch.Get()
	}
	toSerialize["created"] = o.Created
	toSerialize["experience"] = o.Experience
	if o.ExperienceBranch.IsSet() {
		toSerialize["experience_branch"] = o.ExperienceBranch.Get()
	}
	if !IsNil(o.ExperienceId) {
		toSerialize["experience_id"] = o.ExperienceId
	}
	if o.ExpiresAt.IsSet() {
		toSerialize["expires_at"] = o.ExpiresAt.Get()
	}
	if o.FlightcontrolRelease.IsSet() {
		toSerialize["flightcontrol_release"] = o.FlightcontrolRelease.Get()
	}
	if o.GarageId.IsSet() {
		toSerialize["garage_id"] = o.GarageId.Get()
	}
	if o.GcBranch.IsSet() {
		toSerialize["gc_branch"] = o.GcBranch.Get()
	}
	if o.GpuAlias.IsSet() {
		toSerialize["gpu_alias"] = o.GpuAlias.Get()
	}
	if o.GpuCount.IsSet() {
		toSerialize["gpu_count"] = o.GpuCount.Get()
	}
	if o.GpuModel.IsSet() {
		toSerialize["gpu_model"] = o.GpuModel.Get()
	}
	if !IsNil(o.GpuOsName) {
		toSerialize["gpu_os_name"] = o.GpuOsName
	}
	if !IsNil(o.GpuOsRelease) {
		toSerialize["gpu_os_release"] = o.GpuOsRelease
	}
	if !IsNil(o.GpuOsVersion) {
		toSerialize["gpu_os_version"] = o.GpuOsVersion
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.IpAllowlist) {
		toSerialize["ip_allowlist"] = o.IpAllowlist
	}
	if o.Lifetime.IsSet() {
		toSerialize["lifetime"] = o.Lifetime.Get()
	}
	if o.MinGpuCount.IsSet() {
		toSerialize["min_gpu_count"] = o.MinGpuCount.Get()
	}
	toSerialize["modified"] = o.Modified
	if o.NodeCount.IsSet() {
		toSerialize["node_count"] = o.NodeCount.Get()
	}
	if o.OemName.IsSet() {
		toSerialize["oem_name"] = o.OemName.Get()
	}
	toSerialize["org_name"] = o.OrgName
	if o.Overrides != nil {
		toSerialize["overrides"] = o.Overrides
	}
	if o.PersistOnFailure.IsSet() {
		toSerialize["persist_on_failure"] = o.PersistOnFailure.Get()
	}
	if !IsNil(o.Persona) {
		toSerialize["persona"] = o.Persona
	}
	if o.Pipeline.IsSet() {
		toSerialize["pipeline"] = o.Pipeline.Get()
	}
	if o.PipelineBranch.IsSet() {
		toSerialize["pipeline_branch"] = o.PipelineBranch.Get()
	}
	toSerialize["pipelines"] = o.Pipelines
	if o.Platform.IsSet() {
		toSerialize["platform"] = o.Platform.Get()
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if o.ProviderName.IsSet() {
		toSerialize["provider_name"] = o.ProviderName.Get()
	}
	if o.PublicKey.IsSet() {
		toSerialize["public_key"] = o.PublicKey.Get()
	}
	if o.Region.IsSet() {
		toSerialize["region"] = o.Region.Get()
	}
	if !IsNil(o.RequestId) {
		toSerialize["request_id"] = o.RequestId
	}
	toSerialize["requester_email"] = o.RequesterEmail
	toSerialize["requester_name"] = o.RequesterName
	toSerialize["retry_count"] = o.RetryCount
	if o.SalesCreatedDate.IsSet() {
		toSerialize["sales_created_date"] = o.SalesCreatedDate.Get()
	}
	if o.SalesId.IsSet() {
		toSerialize["sales_id"] = o.SalesId.Get()
	}
	if o.SalesOwnerEmail.IsSet() {
		toSerialize["sales_owner_email"] = o.SalesOwnerEmail.Get()
	}
	if o.SalesOwnerName.IsSet() {
		toSerialize["sales_owner_name"] = o.SalesOwnerName.Get()
	}
	toSerialize["services"] = o.Services
	toSerialize["ssh_port"] = o.SshPort
	toSerialize["ssh_user"] = o.SshUser
	toSerialize["state"] = o.State
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Workshop.IsSet() {
		toSerialize["workshop"] = o.Workshop.Get()
	}
	if o.WorkshopId.IsSet() {
		toSerialize["workshop_id"] = o.WorkshopId.Get()
	}
	if o.WorkshopOverridePassword.IsSet() {
		toSerialize["workshop_override_password"] = o.WorkshopOverridePassword.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DocDeploymentDelete) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created",
		"experience",
		"id",
		"modified",
		"org_name",
		"overrides",
		"pipelines",
		"requester_email",
		"requester_name",
		"retry_count",
		"services",
		"ssh_port",
		"ssh_user",
		"state",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDocDeploymentDelete := _DocDeploymentDelete{}

	err = json.Unmarshal(data, &varDocDeploymentDelete)

	if err != nil {
		return err
	}

	*o = DocDeploymentDelete(varDocDeploymentDelete)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "bastion_operating_system")
		delete(additionalProperties, "catalog_id")
		delete(additionalProperties, "catalog_id_alias")
		delete(additionalProperties, "cluster")
		delete(additionalProperties, "collection_branch")
		delete(additionalProperties, "created")
		delete(additionalProperties, "experience")
		delete(additionalProperties, "experience_branch")
		delete(additionalProperties, "experience_id")
		delete(additionalProperties, "expires_at")
		delete(additionalProperties, "flightcontrol_release")
		delete(additionalProperties, "garage_id")
		delete(additionalProperties, "gc_branch")
		delete(additionalProperties, "gpu_alias")
		delete(additionalProperties, "gpu_count")
		delete(additionalProperties, "gpu_model")
		delete(additionalProperties, "gpu_os_name")
		delete(additionalProperties, "gpu_os_release")
		delete(additionalProperties, "gpu_os_version")
		delete(additionalProperties, "id")
		delete(additionalProperties, "ip_allowlist")
		delete(additionalProperties, "lifetime")
		delete(additionalProperties, "min_gpu_count")
		delete(additionalProperties, "modified")
		delete(additionalProperties, "node_count")
		delete(additionalProperties, "oem_name")
		delete(additionalProperties, "org_name")
		delete(additionalProperties, "overrides")
		delete(additionalProperties, "persist_on_failure")
		delete(additionalProperties, "persona")
		delete(additionalProperties, "pipeline")
		delete(additionalProperties, "pipeline_branch")
		delete(additionalProperties, "pipelines")
		delete(additionalProperties, "platform")
		delete(additionalProperties, "priority")
		delete(additionalProperties, "provider_name")
		delete(additionalProperties, "public_key")
		delete(additionalProperties, "region")
		delete(additionalProperties, "request_id")
		delete(additionalProperties, "requester_email")
		delete(additionalProperties, "requester_name")
		delete(additionalProperties, "retry_count")
		delete(additionalProperties, "sales_created_date")
		delete(additionalProperties, "sales_id")
		delete(additionalProperties, "sales_owner_email")
		delete(additionalProperties, "sales_owner_name")
		delete(additionalProperties, "services")
		delete(additionalProperties, "ssh_port")
		delete(additionalProperties, "ssh_user")
		delete(additionalProperties, "state")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "workshop")
		delete(additionalProperties, "workshop_id")
		delete(additionalProperties, "workshop_override_password")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDocDeploymentDelete struct {
	value *DocDeploymentDelete
	isSet bool
}

func (v NullableDocDeploymentDelete) Get() *DocDeploymentDelete {
	return v.value
}

func (v *NullableDocDeploymentDelete) Set(val *DocDeploymentDelete) {
	v.value = val
	v.isSet = true
}

func (v NullableDocDeploymentDelete) IsSet() bool {
	return v.isSet
}

func (v *NullableDocDeploymentDelete) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocDeploymentDelete(val *DocDeploymentDelete) *NullableDocDeploymentDelete {
	return &NullableDocDeploymentDelete{value: val, isSet: true}
}

func (v NullableDocDeploymentDelete) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocDeploymentDelete) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
