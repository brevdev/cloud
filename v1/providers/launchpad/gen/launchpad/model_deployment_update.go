/*
NVIDIA LaunchPad API

RESTful API for interacting with the NVIDIA LaunchPad platform

API version: 2.36.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the DeploymentUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentUpdate{}

// DeploymentUpdate struct for DeploymentUpdate
type DeploymentUpdate struct {
	// Override bastion operating system provisioned and/or configured by Liftoff
	BastionOperatingSystem NullableString `json:"bastion_operating_system"`
	// The cluster where the experience has been deployed
	Cluster NullableString `json:"cluster"`
	// Override the Ansible collection branch initialized within the pipeline
	CollectionBranch NullableString `json:"collection_branch,omitempty"`
	// Timestamp of when the object was created
	Created    time.Time            `json:"created"`
	Experience DeploymentExperience `json:"experience"`
	// Override the experience branch
	ExperienceBranch NullableString `json:"experience_branch,omitempty"`
	ExpiresAt        NullableTime   `json:"expires_at,omitempty"`
	// Override the image tag used for Flight Control
	FlightcontrolRelease NullableString `json:"flightcontrol_release,omitempty"`
	// Require a cluster with nodes in the given garage
	GarageId NullableString `json:"garage_id"`
	// Override the default Ground Control branch
	GcBranch NullableString `json:"gc_branch,omitempty"`
	// Require a cluster with the given GPU alias
	GpuAlias NullableString `json:"gpu_alias"`
	// Require a cluster with the given number of GPUs
	GpuCount NullableInt32 `json:"gpu_count"`
	// Require a cluster with the given GPU model
	GpuModel NullableString `json:"gpu_model"`
	// Override the GPU node operating system name
	GpuOsName NullableString `json:"gpu_os_name"`
	// Override the GPU node operating system release
	GpuOsRelease NullableString `json:"gpu_os_release"`
	// Override the GPU node operating system version
	GpuOsVersion NullableString `json:"gpu_os_version"`
	Id           string         `json:"id"`
	// Host IP addresses that should be allowed to access the deployment
	IpAllowlist []string `json:"ip_allowlist,omitempty"`
	// Set expires_at value to be a given number of days from the current time. A value of 0 will cause a deployment to remain active indefinitely.
	Lifetime NullableInt32 `json:"lifetime"`
	// Require a cluster whose GPU count is greater than or equal to the given number
	MinGpuCount NullableInt32 `json:"min_gpu_count"`
	// Timestamp of when the object was last modified
	Modified time.Time `json:"modified"`
	// Require a cluster with the given number of nodes
	NodeCount NullableInt32 `json:"node_count"`
	// Require a cluster manufactured by the given OEM name
	OemName NullableString `json:"oem_name"`
	// Requester's organization name
	OrgName   *string     `json:"org_name,omitempty"`
	Overrides interface{} `json:"overrides"`
	// Override the default cleanup/destroy behavior when a provisioning failure occurs
	PersistOnFailure NullableBool `json:"persist_on_failure,omitempty"`
	// Override the defined persona in the experience
	Persona NullableString `json:"persona,omitempty"`
	// Override the pipeline ID that will be triggered for request fulfillment
	Pipeline NullableInt64 `json:"pipeline,omitempty"`
	// Override the default pipeline branch ref used when triggering a Fuselage pipeline
	PipelineBranch NullableString       `json:"pipeline_branch,omitempty"`
	Pipelines      []string             `json:"pipelines"`
	Platform       NullablePlatformEnum `json:"platform,omitempty"`
	// Priority level for the request  * `p0` - p0 * `p1` - p1 * `p2` - p2 * `p3` - p3
	Priority PriorityEnum `json:"priority"`
	// Require a cluster from the given provider name
	ProviderName NullableString `json:"provider_name"`
	// The initial or administrative public key used during deployment creation. Additional keys can be authorized for access using the `ssh-keys` endpoint.
	PublicKey NullableString `json:"public_key"`
	// Require a cluster located in the given region
	Region NullableString `json:"region"`
	// Trial request ID (ex: TRY-1234)
	RequestId string `json:"request_id"`
	// Email address of the user requesting the experience
	RequesterEmail *string `json:"requester_email,omitempty"`
	// Name of the user requesting the experience
	RequesterName *string `json:"requester_name,omitempty"`
	// Number of times the deployment has been retried
	RetryCount *int32 `json:"retry_count,omitempty"`
	// Timestamp when the requester's sales relationship was created
	SalesCreatedDate NullableTime `json:"sales_created_date"`
	// Unique identifier for the requester's sales relationship
	SalesId NullableString `json:"sales_id"`
	// Email address of the sales contact associated with the requester
	SalesOwnerEmail NullableString `json:"sales_owner_email,omitempty"`
	// Name of the sales contact associated with the requester
	SalesOwnerName NullableString `json:"sales_owner_name,omitempty"`
	Services       []string       `json:"services"`
	// Current state of the deployment  * `destroyed` - Deployment has been fully destroyed * `destroying` - Deployment is being destroyed * `error` - Deployment has encountered a fatal error and will not be retried * `failed` - Deployment has failed but may be retried * `paused` - Deployment is paused but may be retried later * `ready` - Deployment is ready and all instances are running * `retrying` - Deployment is retrying * `starting` - Deployment instances are starting * `stopped` - Deployment instances are stopped * `stopping` - Deployment instances are stopping * `waiting` - Waiting for deployment to be ready
	State *DeploymentState `json:"state,omitempty"`
	Tags  interface{}      `json:"tags,omitempty"`
	// Require a cluster whose workshop flag is set
	Workshop NullableBool `json:"workshop"`
	// Require a cluster with the given workshop ID
	WorkshopId NullableString `json:"workshop_id"`
	// Override the deployment's default authentication to use a static password. This is useful for workshops when you'd like an identical password associated with a collection of environments. (LaunchPad Team only)
	WorkshopOverridePassword NullableString `json:"workshop_override_password"`
	AdditionalProperties     map[string]interface{}
}

type _DeploymentUpdate DeploymentUpdate

// NewDeploymentUpdate instantiates a new DeploymentUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentUpdate(bastionOperatingSystem NullableString, cluster NullableString, created time.Time, experience DeploymentExperience, garageId NullableString, gpuAlias NullableString, gpuCount NullableInt32, gpuModel NullableString, gpuOsName NullableString, gpuOsRelease NullableString, gpuOsVersion NullableString, id string, lifetime NullableInt32, minGpuCount NullableInt32, modified time.Time, nodeCount NullableInt32, oemName NullableString, overrides interface{}, pipelines []string, priority PriorityEnum, providerName NullableString, publicKey NullableString, region NullableString, requestId string, salesCreatedDate NullableTime, salesId NullableString, services []string, workshop NullableBool, workshopId NullableString, workshopOverridePassword NullableString) *DeploymentUpdate {
	this := DeploymentUpdate{}
	this.BastionOperatingSystem = bastionOperatingSystem
	this.Cluster = cluster
	this.Created = created
	this.Experience = experience
	this.GarageId = garageId
	this.GpuAlias = gpuAlias
	this.GpuCount = gpuCount
	this.GpuModel = gpuModel
	this.GpuOsName = gpuOsName
	this.GpuOsRelease = gpuOsRelease
	this.GpuOsVersion = gpuOsVersion
	this.Id = id
	this.Lifetime = lifetime
	this.MinGpuCount = minGpuCount
	this.Modified = modified
	this.NodeCount = nodeCount
	this.OemName = oemName
	this.Overrides = overrides
	this.Pipelines = pipelines
	this.Priority = priority
	this.ProviderName = providerName
	this.PublicKey = publicKey
	this.Region = region
	this.RequestId = requestId
	this.SalesCreatedDate = salesCreatedDate
	this.SalesId = salesId
	this.Services = services
	this.Workshop = workshop
	this.WorkshopId = workshopId
	this.WorkshopOverridePassword = workshopOverridePassword
	return &this
}

// NewDeploymentUpdateWithDefaults instantiates a new DeploymentUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentUpdateWithDefaults() *DeploymentUpdate {
	this := DeploymentUpdate{}
	return &this
}

// GetBastionOperatingSystem returns the BastionOperatingSystem field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeploymentUpdate) GetBastionOperatingSystem() string {
	if o == nil || o.BastionOperatingSystem.Get() == nil {
		var ret string
		return ret
	}

	return *o.BastionOperatingSystem.Get()
}

// GetBastionOperatingSystemOk returns a tuple with the BastionOperatingSystem field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetBastionOperatingSystemOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BastionOperatingSystem.Get(), o.BastionOperatingSystem.IsSet()
}

// SetBastionOperatingSystem sets field value
func (o *DeploymentUpdate) SetBastionOperatingSystem(v string) {
	o.BastionOperatingSystem.Set(&v)
}

// GetCluster returns the Cluster field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeploymentUpdate) GetCluster() string {
	if o == nil || o.Cluster.Get() == nil {
		var ret string
		return ret
	}

	return *o.Cluster.Get()
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetClusterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cluster.Get(), o.Cluster.IsSet()
}

// SetCluster sets field value
func (o *DeploymentUpdate) SetCluster(v string) {
	o.Cluster.Set(&v)
}

// GetCollectionBranch returns the CollectionBranch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentUpdate) GetCollectionBranch() string {
	if o == nil || IsNil(o.CollectionBranch.Get()) {
		var ret string
		return ret
	}
	return *o.CollectionBranch.Get()
}

// GetCollectionBranchOk returns a tuple with the CollectionBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetCollectionBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CollectionBranch.Get(), o.CollectionBranch.IsSet()
}

// HasCollectionBranch returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasCollectionBranch() bool {
	if o != nil && o.CollectionBranch.IsSet() {
		return true
	}

	return false
}

// SetCollectionBranch gets a reference to the given NullableString and assigns it to the CollectionBranch field.
func (o *DeploymentUpdate) SetCollectionBranch(v string) {
	o.CollectionBranch.Set(&v)
}

// SetCollectionBranchNil sets the value for CollectionBranch to be an explicit nil
func (o *DeploymentUpdate) SetCollectionBranchNil() {
	o.CollectionBranch.Set(nil)
}

// UnsetCollectionBranch ensures that no value is present for CollectionBranch, not even an explicit nil
func (o *DeploymentUpdate) UnsetCollectionBranch() {
	o.CollectionBranch.Unset()
}

// GetCreated returns the Created field value
func (o *DeploymentUpdate) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *DeploymentUpdate) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *DeploymentUpdate) SetCreated(v time.Time) {
	o.Created = v
}

// GetExperience returns the Experience field value
func (o *DeploymentUpdate) GetExperience() DeploymentExperience {
	if o == nil {
		var ret DeploymentExperience
		return ret
	}

	return o.Experience
}

// GetExperienceOk returns a tuple with the Experience field value
// and a boolean to check if the value has been set.
func (o *DeploymentUpdate) GetExperienceOk() (*DeploymentExperience, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Experience, true
}

// SetExperience sets field value
func (o *DeploymentUpdate) SetExperience(v DeploymentExperience) {
	o.Experience = v
}

// GetExperienceBranch returns the ExperienceBranch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentUpdate) GetExperienceBranch() string {
	if o == nil || IsNil(o.ExperienceBranch.Get()) {
		var ret string
		return ret
	}
	return *o.ExperienceBranch.Get()
}

// GetExperienceBranchOk returns a tuple with the ExperienceBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetExperienceBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExperienceBranch.Get(), o.ExperienceBranch.IsSet()
}

// HasExperienceBranch returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasExperienceBranch() bool {
	if o != nil && o.ExperienceBranch.IsSet() {
		return true
	}

	return false
}

// SetExperienceBranch gets a reference to the given NullableString and assigns it to the ExperienceBranch field.
func (o *DeploymentUpdate) SetExperienceBranch(v string) {
	o.ExperienceBranch.Set(&v)
}

// SetExperienceBranchNil sets the value for ExperienceBranch to be an explicit nil
func (o *DeploymentUpdate) SetExperienceBranchNil() {
	o.ExperienceBranch.Set(nil)
}

// UnsetExperienceBranch ensures that no value is present for ExperienceBranch, not even an explicit nil
func (o *DeploymentUpdate) UnsetExperienceBranch() {
	o.ExperienceBranch.Unset()
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentUpdate) GetExpiresAt() time.Time {
	if o == nil || IsNil(o.ExpiresAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt.Get()
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiresAt.Get(), o.ExpiresAt.IsSet()
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasExpiresAt() bool {
	if o != nil && o.ExpiresAt.IsSet() {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given NullableTime and assigns it to the ExpiresAt field.
func (o *DeploymentUpdate) SetExpiresAt(v time.Time) {
	o.ExpiresAt.Set(&v)
}

// SetExpiresAtNil sets the value for ExpiresAt to be an explicit nil
func (o *DeploymentUpdate) SetExpiresAtNil() {
	o.ExpiresAt.Set(nil)
}

// UnsetExpiresAt ensures that no value is present for ExpiresAt, not even an explicit nil
func (o *DeploymentUpdate) UnsetExpiresAt() {
	o.ExpiresAt.Unset()
}

// GetFlightcontrolRelease returns the FlightcontrolRelease field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentUpdate) GetFlightcontrolRelease() string {
	if o == nil || IsNil(o.FlightcontrolRelease.Get()) {
		var ret string
		return ret
	}
	return *o.FlightcontrolRelease.Get()
}

// GetFlightcontrolReleaseOk returns a tuple with the FlightcontrolRelease field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetFlightcontrolReleaseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FlightcontrolRelease.Get(), o.FlightcontrolRelease.IsSet()
}

// HasFlightcontrolRelease returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasFlightcontrolRelease() bool {
	if o != nil && o.FlightcontrolRelease.IsSet() {
		return true
	}

	return false
}

// SetFlightcontrolRelease gets a reference to the given NullableString and assigns it to the FlightcontrolRelease field.
func (o *DeploymentUpdate) SetFlightcontrolRelease(v string) {
	o.FlightcontrolRelease.Set(&v)
}

// SetFlightcontrolReleaseNil sets the value for FlightcontrolRelease to be an explicit nil
func (o *DeploymentUpdate) SetFlightcontrolReleaseNil() {
	o.FlightcontrolRelease.Set(nil)
}

// UnsetFlightcontrolRelease ensures that no value is present for FlightcontrolRelease, not even an explicit nil
func (o *DeploymentUpdate) UnsetFlightcontrolRelease() {
	o.FlightcontrolRelease.Unset()
}

// GetGarageId returns the GarageId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeploymentUpdate) GetGarageId() string {
	if o == nil || o.GarageId.Get() == nil {
		var ret string
		return ret
	}

	return *o.GarageId.Get()
}

// GetGarageIdOk returns a tuple with the GarageId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetGarageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GarageId.Get(), o.GarageId.IsSet()
}

// SetGarageId sets field value
func (o *DeploymentUpdate) SetGarageId(v string) {
	o.GarageId.Set(&v)
}

// GetGcBranch returns the GcBranch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentUpdate) GetGcBranch() string {
	if o == nil || IsNil(o.GcBranch.Get()) {
		var ret string
		return ret
	}
	return *o.GcBranch.Get()
}

// GetGcBranchOk returns a tuple with the GcBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetGcBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GcBranch.Get(), o.GcBranch.IsSet()
}

// HasGcBranch returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasGcBranch() bool {
	if o != nil && o.GcBranch.IsSet() {
		return true
	}

	return false
}

// SetGcBranch gets a reference to the given NullableString and assigns it to the GcBranch field.
func (o *DeploymentUpdate) SetGcBranch(v string) {
	o.GcBranch.Set(&v)
}

// SetGcBranchNil sets the value for GcBranch to be an explicit nil
func (o *DeploymentUpdate) SetGcBranchNil() {
	o.GcBranch.Set(nil)
}

// UnsetGcBranch ensures that no value is present for GcBranch, not even an explicit nil
func (o *DeploymentUpdate) UnsetGcBranch() {
	o.GcBranch.Unset()
}

// GetGpuAlias returns the GpuAlias field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeploymentUpdate) GetGpuAlias() string {
	if o == nil || o.GpuAlias.Get() == nil {
		var ret string
		return ret
	}

	return *o.GpuAlias.Get()
}

// GetGpuAliasOk returns a tuple with the GpuAlias field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetGpuAliasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GpuAlias.Get(), o.GpuAlias.IsSet()
}

// SetGpuAlias sets field value
func (o *DeploymentUpdate) SetGpuAlias(v string) {
	o.GpuAlias.Set(&v)
}

// GetGpuCount returns the GpuCount field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *DeploymentUpdate) GetGpuCount() int32 {
	if o == nil || o.GpuCount.Get() == nil {
		var ret int32
		return ret
	}

	return *o.GpuCount.Get()
}

// GetGpuCountOk returns a tuple with the GpuCount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetGpuCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.GpuCount.Get(), o.GpuCount.IsSet()
}

// SetGpuCount sets field value
func (o *DeploymentUpdate) SetGpuCount(v int32) {
	o.GpuCount.Set(&v)
}

// GetGpuModel returns the GpuModel field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeploymentUpdate) GetGpuModel() string {
	if o == nil || o.GpuModel.Get() == nil {
		var ret string
		return ret
	}

	return *o.GpuModel.Get()
}

// GetGpuModelOk returns a tuple with the GpuModel field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetGpuModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GpuModel.Get(), o.GpuModel.IsSet()
}

// SetGpuModel sets field value
func (o *DeploymentUpdate) SetGpuModel(v string) {
	o.GpuModel.Set(&v)
}

// GetGpuOsName returns the GpuOsName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeploymentUpdate) GetGpuOsName() string {
	if o == nil || o.GpuOsName.Get() == nil {
		var ret string
		return ret
	}

	return *o.GpuOsName.Get()
}

// GetGpuOsNameOk returns a tuple with the GpuOsName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetGpuOsNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GpuOsName.Get(), o.GpuOsName.IsSet()
}

// SetGpuOsName sets field value
func (o *DeploymentUpdate) SetGpuOsName(v string) {
	o.GpuOsName.Set(&v)
}

// GetGpuOsRelease returns the GpuOsRelease field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeploymentUpdate) GetGpuOsRelease() string {
	if o == nil || o.GpuOsRelease.Get() == nil {
		var ret string
		return ret
	}

	return *o.GpuOsRelease.Get()
}

// GetGpuOsReleaseOk returns a tuple with the GpuOsRelease field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetGpuOsReleaseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GpuOsRelease.Get(), o.GpuOsRelease.IsSet()
}

// SetGpuOsRelease sets field value
func (o *DeploymentUpdate) SetGpuOsRelease(v string) {
	o.GpuOsRelease.Set(&v)
}

// GetGpuOsVersion returns the GpuOsVersion field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeploymentUpdate) GetGpuOsVersion() string {
	if o == nil || o.GpuOsVersion.Get() == nil {
		var ret string
		return ret
	}

	return *o.GpuOsVersion.Get()
}

// GetGpuOsVersionOk returns a tuple with the GpuOsVersion field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetGpuOsVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GpuOsVersion.Get(), o.GpuOsVersion.IsSet()
}

// SetGpuOsVersion sets field value
func (o *DeploymentUpdate) SetGpuOsVersion(v string) {
	o.GpuOsVersion.Set(&v)
}

// GetId returns the Id field value
func (o *DeploymentUpdate) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DeploymentUpdate) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DeploymentUpdate) SetId(v string) {
	o.Id = v
}

// GetIpAllowlist returns the IpAllowlist field value if set, zero value otherwise.
func (o *DeploymentUpdate) GetIpAllowlist() []string {
	if o == nil || IsNil(o.IpAllowlist) {
		var ret []string
		return ret
	}
	return o.IpAllowlist
}

// GetIpAllowlistOk returns a tuple with the IpAllowlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentUpdate) GetIpAllowlistOk() ([]string, bool) {
	if o == nil || IsNil(o.IpAllowlist) {
		return nil, false
	}
	return o.IpAllowlist, true
}

// HasIpAllowlist returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasIpAllowlist() bool {
	if o != nil && !IsNil(o.IpAllowlist) {
		return true
	}

	return false
}

// SetIpAllowlist gets a reference to the given []string and assigns it to the IpAllowlist field.
func (o *DeploymentUpdate) SetIpAllowlist(v []string) {
	o.IpAllowlist = v
}

// GetLifetime returns the Lifetime field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *DeploymentUpdate) GetLifetime() int32 {
	if o == nil || o.Lifetime.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Lifetime.Get()
}

// GetLifetimeOk returns a tuple with the Lifetime field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetLifetimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Lifetime.Get(), o.Lifetime.IsSet()
}

// SetLifetime sets field value
func (o *DeploymentUpdate) SetLifetime(v int32) {
	o.Lifetime.Set(&v)
}

// GetMinGpuCount returns the MinGpuCount field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *DeploymentUpdate) GetMinGpuCount() int32 {
	if o == nil || o.MinGpuCount.Get() == nil {
		var ret int32
		return ret
	}

	return *o.MinGpuCount.Get()
}

// GetMinGpuCountOk returns a tuple with the MinGpuCount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetMinGpuCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinGpuCount.Get(), o.MinGpuCount.IsSet()
}

// SetMinGpuCount sets field value
func (o *DeploymentUpdate) SetMinGpuCount(v int32) {
	o.MinGpuCount.Set(&v)
}

// GetModified returns the Modified field value
func (o *DeploymentUpdate) GetModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value
// and a boolean to check if the value has been set.
func (o *DeploymentUpdate) GetModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modified, true
}

// SetModified sets field value
func (o *DeploymentUpdate) SetModified(v time.Time) {
	o.Modified = v
}

// GetNodeCount returns the NodeCount field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *DeploymentUpdate) GetNodeCount() int32 {
	if o == nil || o.NodeCount.Get() == nil {
		var ret int32
		return ret
	}

	return *o.NodeCount.Get()
}

// GetNodeCountOk returns a tuple with the NodeCount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetNodeCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NodeCount.Get(), o.NodeCount.IsSet()
}

// SetNodeCount sets field value
func (o *DeploymentUpdate) SetNodeCount(v int32) {
	o.NodeCount.Set(&v)
}

// GetOemName returns the OemName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeploymentUpdate) GetOemName() string {
	if o == nil || o.OemName.Get() == nil {
		var ret string
		return ret
	}

	return *o.OemName.Get()
}

// GetOemNameOk returns a tuple with the OemName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetOemNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OemName.Get(), o.OemName.IsSet()
}

// SetOemName sets field value
func (o *DeploymentUpdate) SetOemName(v string) {
	o.OemName.Set(&v)
}

// GetOrgName returns the OrgName field value if set, zero value otherwise.
func (o *DeploymentUpdate) GetOrgName() string {
	if o == nil || IsNil(o.OrgName) {
		var ret string
		return ret
	}
	return *o.OrgName
}

// GetOrgNameOk returns a tuple with the OrgName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentUpdate) GetOrgNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrgName) {
		return nil, false
	}
	return o.OrgName, true
}

// HasOrgName returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasOrgName() bool {
	if o != nil && !IsNil(o.OrgName) {
		return true
	}

	return false
}

// SetOrgName gets a reference to the given string and assigns it to the OrgName field.
func (o *DeploymentUpdate) SetOrgName(v string) {
	o.OrgName = &v
}

// GetOverrides returns the Overrides field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *DeploymentUpdate) GetOverrides() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Overrides
}

// GetOverridesOk returns a tuple with the Overrides field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetOverridesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Overrides) {
		return nil, false
	}
	return &o.Overrides, true
}

// SetOverrides sets field value
func (o *DeploymentUpdate) SetOverrides(v interface{}) {
	o.Overrides = v
}

// GetPersistOnFailure returns the PersistOnFailure field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentUpdate) GetPersistOnFailure() bool {
	if o == nil || IsNil(o.PersistOnFailure.Get()) {
		var ret bool
		return ret
	}
	return *o.PersistOnFailure.Get()
}

// GetPersistOnFailureOk returns a tuple with the PersistOnFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetPersistOnFailureOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.PersistOnFailure.Get(), o.PersistOnFailure.IsSet()
}

// HasPersistOnFailure returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasPersistOnFailure() bool {
	if o != nil && o.PersistOnFailure.IsSet() {
		return true
	}

	return false
}

// SetPersistOnFailure gets a reference to the given NullableBool and assigns it to the PersistOnFailure field.
func (o *DeploymentUpdate) SetPersistOnFailure(v bool) {
	o.PersistOnFailure.Set(&v)
}

// SetPersistOnFailureNil sets the value for PersistOnFailure to be an explicit nil
func (o *DeploymentUpdate) SetPersistOnFailureNil() {
	o.PersistOnFailure.Set(nil)
}

// UnsetPersistOnFailure ensures that no value is present for PersistOnFailure, not even an explicit nil
func (o *DeploymentUpdate) UnsetPersistOnFailure() {
	o.PersistOnFailure.Unset()
}

// GetPersona returns the Persona field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentUpdate) GetPersona() string {
	if o == nil || IsNil(o.Persona.Get()) {
		var ret string
		return ret
	}
	return *o.Persona.Get()
}

// GetPersonaOk returns a tuple with the Persona field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetPersonaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Persona.Get(), o.Persona.IsSet()
}

// HasPersona returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasPersona() bool {
	if o != nil && o.Persona.IsSet() {
		return true
	}

	return false
}

// SetPersona gets a reference to the given NullableString and assigns it to the Persona field.
func (o *DeploymentUpdate) SetPersona(v string) {
	o.Persona.Set(&v)
}

// SetPersonaNil sets the value for Persona to be an explicit nil
func (o *DeploymentUpdate) SetPersonaNil() {
	o.Persona.Set(nil)
}

// UnsetPersona ensures that no value is present for Persona, not even an explicit nil
func (o *DeploymentUpdate) UnsetPersona() {
	o.Persona.Unset()
}

// GetPipeline returns the Pipeline field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentUpdate) GetPipeline() int64 {
	if o == nil || IsNil(o.Pipeline.Get()) {
		var ret int64
		return ret
	}
	return *o.Pipeline.Get()
}

// GetPipelineOk returns a tuple with the Pipeline field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetPipelineOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pipeline.Get(), o.Pipeline.IsSet()
}

// HasPipeline returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasPipeline() bool {
	if o != nil && o.Pipeline.IsSet() {
		return true
	}

	return false
}

// SetPipeline gets a reference to the given NullableInt64 and assigns it to the Pipeline field.
func (o *DeploymentUpdate) SetPipeline(v int64) {
	o.Pipeline.Set(&v)
}

// SetPipelineNil sets the value for Pipeline to be an explicit nil
func (o *DeploymentUpdate) SetPipelineNil() {
	o.Pipeline.Set(nil)
}

// UnsetPipeline ensures that no value is present for Pipeline, not even an explicit nil
func (o *DeploymentUpdate) UnsetPipeline() {
	o.Pipeline.Unset()
}

// GetPipelineBranch returns the PipelineBranch field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentUpdate) GetPipelineBranch() string {
	if o == nil || IsNil(o.PipelineBranch.Get()) {
		var ret string
		return ret
	}
	return *o.PipelineBranch.Get()
}

// GetPipelineBranchOk returns a tuple with the PipelineBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetPipelineBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PipelineBranch.Get(), o.PipelineBranch.IsSet()
}

// HasPipelineBranch returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasPipelineBranch() bool {
	if o != nil && o.PipelineBranch.IsSet() {
		return true
	}

	return false
}

// SetPipelineBranch gets a reference to the given NullableString and assigns it to the PipelineBranch field.
func (o *DeploymentUpdate) SetPipelineBranch(v string) {
	o.PipelineBranch.Set(&v)
}

// SetPipelineBranchNil sets the value for PipelineBranch to be an explicit nil
func (o *DeploymentUpdate) SetPipelineBranchNil() {
	o.PipelineBranch.Set(nil)
}

// UnsetPipelineBranch ensures that no value is present for PipelineBranch, not even an explicit nil
func (o *DeploymentUpdate) UnsetPipelineBranch() {
	o.PipelineBranch.Unset()
}

// GetPipelines returns the Pipelines field value
func (o *DeploymentUpdate) GetPipelines() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Pipelines
}

// GetPipelinesOk returns a tuple with the Pipelines field value
// and a boolean to check if the value has been set.
func (o *DeploymentUpdate) GetPipelinesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pipelines, true
}

// SetPipelines sets field value
func (o *DeploymentUpdate) SetPipelines(v []string) {
	o.Pipelines = v
}

// GetPlatform returns the Platform field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentUpdate) GetPlatform() PlatformEnum {
	if o == nil || IsNil(o.Platform.Get()) {
		var ret PlatformEnum
		return ret
	}
	return *o.Platform.Get()
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetPlatformOk() (*PlatformEnum, bool) {
	if o == nil {
		return nil, false
	}
	return o.Platform.Get(), o.Platform.IsSet()
}

// HasPlatform returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasPlatform() bool {
	if o != nil && o.Platform.IsSet() {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given NullablePlatformEnum and assigns it to the Platform field.
func (o *DeploymentUpdate) SetPlatform(v PlatformEnum) {
	o.Platform.Set(&v)
}

// SetPlatformNil sets the value for Platform to be an explicit nil
func (o *DeploymentUpdate) SetPlatformNil() {
	o.Platform.Set(nil)
}

// UnsetPlatform ensures that no value is present for Platform, not even an explicit nil
func (o *DeploymentUpdate) UnsetPlatform() {
	o.Platform.Unset()
}

// GetPriority returns the Priority field value
func (o *DeploymentUpdate) GetPriority() PriorityEnum {
	if o == nil {
		var ret PriorityEnum
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *DeploymentUpdate) GetPriorityOk() (*PriorityEnum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *DeploymentUpdate) SetPriority(v PriorityEnum) {
	o.Priority = v
}

// GetProviderName returns the ProviderName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeploymentUpdate) GetProviderName() string {
	if o == nil || o.ProviderName.Get() == nil {
		var ret string
		return ret
	}

	return *o.ProviderName.Get()
}

// GetProviderNameOk returns a tuple with the ProviderName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetProviderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProviderName.Get(), o.ProviderName.IsSet()
}

// SetProviderName sets field value
func (o *DeploymentUpdate) SetProviderName(v string) {
	o.ProviderName.Set(&v)
}

// GetPublicKey returns the PublicKey field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeploymentUpdate) GetPublicKey() string {
	if o == nil || o.PublicKey.Get() == nil {
		var ret string
		return ret
	}

	return *o.PublicKey.Get()
}

// GetPublicKeyOk returns a tuple with the PublicKey field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PublicKey.Get(), o.PublicKey.IsSet()
}

// SetPublicKey sets field value
func (o *DeploymentUpdate) SetPublicKey(v string) {
	o.PublicKey.Set(&v)
}

// GetRegion returns the Region field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeploymentUpdate) GetRegion() string {
	if o == nil || o.Region.Get() == nil {
		var ret string
		return ret
	}

	return *o.Region.Get()
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Region.Get(), o.Region.IsSet()
}

// SetRegion sets field value
func (o *DeploymentUpdate) SetRegion(v string) {
	o.Region.Set(&v)
}

// GetRequestId returns the RequestId field value
func (o *DeploymentUpdate) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *DeploymentUpdate) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *DeploymentUpdate) SetRequestId(v string) {
	o.RequestId = v
}

// GetRequesterEmail returns the RequesterEmail field value if set, zero value otherwise.
func (o *DeploymentUpdate) GetRequesterEmail() string {
	if o == nil || IsNil(o.RequesterEmail) {
		var ret string
		return ret
	}
	return *o.RequesterEmail
}

// GetRequesterEmailOk returns a tuple with the RequesterEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentUpdate) GetRequesterEmailOk() (*string, bool) {
	if o == nil || IsNil(o.RequesterEmail) {
		return nil, false
	}
	return o.RequesterEmail, true
}

// HasRequesterEmail returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasRequesterEmail() bool {
	if o != nil && !IsNil(o.RequesterEmail) {
		return true
	}

	return false
}

// SetRequesterEmail gets a reference to the given string and assigns it to the RequesterEmail field.
func (o *DeploymentUpdate) SetRequesterEmail(v string) {
	o.RequesterEmail = &v
}

// GetRequesterName returns the RequesterName field value if set, zero value otherwise.
func (o *DeploymentUpdate) GetRequesterName() string {
	if o == nil || IsNil(o.RequesterName) {
		var ret string
		return ret
	}
	return *o.RequesterName
}

// GetRequesterNameOk returns a tuple with the RequesterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentUpdate) GetRequesterNameOk() (*string, bool) {
	if o == nil || IsNil(o.RequesterName) {
		return nil, false
	}
	return o.RequesterName, true
}

// HasRequesterName returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasRequesterName() bool {
	if o != nil && !IsNil(o.RequesterName) {
		return true
	}

	return false
}

// SetRequesterName gets a reference to the given string and assigns it to the RequesterName field.
func (o *DeploymentUpdate) SetRequesterName(v string) {
	o.RequesterName = &v
}

// GetRetryCount returns the RetryCount field value if set, zero value otherwise.
func (o *DeploymentUpdate) GetRetryCount() int32 {
	if o == nil || IsNil(o.RetryCount) {
		var ret int32
		return ret
	}
	return *o.RetryCount
}

// GetRetryCountOk returns a tuple with the RetryCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentUpdate) GetRetryCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RetryCount) {
		return nil, false
	}
	return o.RetryCount, true
}

// HasRetryCount returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasRetryCount() bool {
	if o != nil && !IsNil(o.RetryCount) {
		return true
	}

	return false
}

// SetRetryCount gets a reference to the given int32 and assigns it to the RetryCount field.
func (o *DeploymentUpdate) SetRetryCount(v int32) {
	o.RetryCount = &v
}

// GetSalesCreatedDate returns the SalesCreatedDate field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *DeploymentUpdate) GetSalesCreatedDate() time.Time {
	if o == nil || o.SalesCreatedDate.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.SalesCreatedDate.Get()
}

// GetSalesCreatedDateOk returns a tuple with the SalesCreatedDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetSalesCreatedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.SalesCreatedDate.Get(), o.SalesCreatedDate.IsSet()
}

// SetSalesCreatedDate sets field value
func (o *DeploymentUpdate) SetSalesCreatedDate(v time.Time) {
	o.SalesCreatedDate.Set(&v)
}

// GetSalesId returns the SalesId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeploymentUpdate) GetSalesId() string {
	if o == nil || o.SalesId.Get() == nil {
		var ret string
		return ret
	}

	return *o.SalesId.Get()
}

// GetSalesIdOk returns a tuple with the SalesId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetSalesIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SalesId.Get(), o.SalesId.IsSet()
}

// SetSalesId sets field value
func (o *DeploymentUpdate) SetSalesId(v string) {
	o.SalesId.Set(&v)
}

// GetSalesOwnerEmail returns the SalesOwnerEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentUpdate) GetSalesOwnerEmail() string {
	if o == nil || IsNil(o.SalesOwnerEmail.Get()) {
		var ret string
		return ret
	}
	return *o.SalesOwnerEmail.Get()
}

// GetSalesOwnerEmailOk returns a tuple with the SalesOwnerEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetSalesOwnerEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SalesOwnerEmail.Get(), o.SalesOwnerEmail.IsSet()
}

// HasSalesOwnerEmail returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasSalesOwnerEmail() bool {
	if o != nil && o.SalesOwnerEmail.IsSet() {
		return true
	}

	return false
}

// SetSalesOwnerEmail gets a reference to the given NullableString and assigns it to the SalesOwnerEmail field.
func (o *DeploymentUpdate) SetSalesOwnerEmail(v string) {
	o.SalesOwnerEmail.Set(&v)
}

// SetSalesOwnerEmailNil sets the value for SalesOwnerEmail to be an explicit nil
func (o *DeploymentUpdate) SetSalesOwnerEmailNil() {
	o.SalesOwnerEmail.Set(nil)
}

// UnsetSalesOwnerEmail ensures that no value is present for SalesOwnerEmail, not even an explicit nil
func (o *DeploymentUpdate) UnsetSalesOwnerEmail() {
	o.SalesOwnerEmail.Unset()
}

// GetSalesOwnerName returns the SalesOwnerName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentUpdate) GetSalesOwnerName() string {
	if o == nil || IsNil(o.SalesOwnerName.Get()) {
		var ret string
		return ret
	}
	return *o.SalesOwnerName.Get()
}

// GetSalesOwnerNameOk returns a tuple with the SalesOwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetSalesOwnerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SalesOwnerName.Get(), o.SalesOwnerName.IsSet()
}

// HasSalesOwnerName returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasSalesOwnerName() bool {
	if o != nil && o.SalesOwnerName.IsSet() {
		return true
	}

	return false
}

// SetSalesOwnerName gets a reference to the given NullableString and assigns it to the SalesOwnerName field.
func (o *DeploymentUpdate) SetSalesOwnerName(v string) {
	o.SalesOwnerName.Set(&v)
}

// SetSalesOwnerNameNil sets the value for SalesOwnerName to be an explicit nil
func (o *DeploymentUpdate) SetSalesOwnerNameNil() {
	o.SalesOwnerName.Set(nil)
}

// UnsetSalesOwnerName ensures that no value is present for SalesOwnerName, not even an explicit nil
func (o *DeploymentUpdate) UnsetSalesOwnerName() {
	o.SalesOwnerName.Unset()
}

// GetServices returns the Services field value
func (o *DeploymentUpdate) GetServices() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Services
}

// GetServicesOk returns a tuple with the Services field value
// and a boolean to check if the value has been set.
func (o *DeploymentUpdate) GetServicesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Services, true
}

// SetServices sets field value
func (o *DeploymentUpdate) SetServices(v []string) {
	o.Services = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *DeploymentUpdate) GetState() DeploymentState {
	if o == nil || IsNil(o.State) {
		var ret DeploymentState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentUpdate) GetStateOk() (*DeploymentState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given DeploymentState and assigns it to the State field.
func (o *DeploymentUpdate) SetState(v DeploymentState) {
	o.State = &v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentUpdate) GetTags() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetTagsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return &o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *DeploymentUpdate) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given interface{} and assigns it to the Tags field.
func (o *DeploymentUpdate) SetTags(v interface{}) {
	o.Tags = v
}

// GetWorkshop returns the Workshop field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *DeploymentUpdate) GetWorkshop() bool {
	if o == nil || o.Workshop.Get() == nil {
		var ret bool
		return ret
	}

	return *o.Workshop.Get()
}

// GetWorkshopOk returns a tuple with the Workshop field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetWorkshopOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Workshop.Get(), o.Workshop.IsSet()
}

// SetWorkshop sets field value
func (o *DeploymentUpdate) SetWorkshop(v bool) {
	o.Workshop.Set(&v)
}

// GetWorkshopId returns the WorkshopId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeploymentUpdate) GetWorkshopId() string {
	if o == nil || o.WorkshopId.Get() == nil {
		var ret string
		return ret
	}

	return *o.WorkshopId.Get()
}

// GetWorkshopIdOk returns a tuple with the WorkshopId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetWorkshopIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkshopId.Get(), o.WorkshopId.IsSet()
}

// SetWorkshopId sets field value
func (o *DeploymentUpdate) SetWorkshopId(v string) {
	o.WorkshopId.Set(&v)
}

// GetWorkshopOverridePassword returns the WorkshopOverridePassword field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DeploymentUpdate) GetWorkshopOverridePassword() string {
	if o == nil || o.WorkshopOverridePassword.Get() == nil {
		var ret string
		return ret
	}

	return *o.WorkshopOverridePassword.Get()
}

// GetWorkshopOverridePasswordOk returns a tuple with the WorkshopOverridePassword field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentUpdate) GetWorkshopOverridePasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkshopOverridePassword.Get(), o.WorkshopOverridePassword.IsSet()
}

// SetWorkshopOverridePassword sets field value
func (o *DeploymentUpdate) SetWorkshopOverridePassword(v string) {
	o.WorkshopOverridePassword.Set(&v)
}

func (o DeploymentUpdate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bastion_operating_system"] = o.BastionOperatingSystem.Get()
	toSerialize["cluster"] = o.Cluster.Get()
	if o.CollectionBranch.IsSet() {
		toSerialize["collection_branch"] = o.CollectionBranch.Get()
	}
	toSerialize["created"] = o.Created
	toSerialize["experience"] = o.Experience
	if o.ExperienceBranch.IsSet() {
		toSerialize["experience_branch"] = o.ExperienceBranch.Get()
	}
	if o.ExpiresAt.IsSet() {
		toSerialize["expires_at"] = o.ExpiresAt.Get()
	}
	if o.FlightcontrolRelease.IsSet() {
		toSerialize["flightcontrol_release"] = o.FlightcontrolRelease.Get()
	}
	toSerialize["garage_id"] = o.GarageId.Get()
	if o.GcBranch.IsSet() {
		toSerialize["gc_branch"] = o.GcBranch.Get()
	}
	toSerialize["gpu_alias"] = o.GpuAlias.Get()
	toSerialize["gpu_count"] = o.GpuCount.Get()
	toSerialize["gpu_model"] = o.GpuModel.Get()
	toSerialize["gpu_os_name"] = o.GpuOsName.Get()
	toSerialize["gpu_os_release"] = o.GpuOsRelease.Get()
	toSerialize["gpu_os_version"] = o.GpuOsVersion.Get()
	toSerialize["id"] = o.Id
	if !IsNil(o.IpAllowlist) {
		toSerialize["ip_allowlist"] = o.IpAllowlist
	}
	toSerialize["lifetime"] = o.Lifetime.Get()
	toSerialize["min_gpu_count"] = o.MinGpuCount.Get()
	toSerialize["modified"] = o.Modified
	toSerialize["node_count"] = o.NodeCount.Get()
	toSerialize["oem_name"] = o.OemName.Get()
	if !IsNil(o.OrgName) {
		toSerialize["org_name"] = o.OrgName
	}
	if o.Overrides != nil {
		toSerialize["overrides"] = o.Overrides
	}
	if o.PersistOnFailure.IsSet() {
		toSerialize["persist_on_failure"] = o.PersistOnFailure.Get()
	}
	if o.Persona.IsSet() {
		toSerialize["persona"] = o.Persona.Get()
	}
	if o.Pipeline.IsSet() {
		toSerialize["pipeline"] = o.Pipeline.Get()
	}
	if o.PipelineBranch.IsSet() {
		toSerialize["pipeline_branch"] = o.PipelineBranch.Get()
	}
	toSerialize["pipelines"] = o.Pipelines
	if o.Platform.IsSet() {
		toSerialize["platform"] = o.Platform.Get()
	}
	toSerialize["priority"] = o.Priority
	toSerialize["provider_name"] = o.ProviderName.Get()
	toSerialize["public_key"] = o.PublicKey.Get()
	toSerialize["region"] = o.Region.Get()
	toSerialize["request_id"] = o.RequestId
	if !IsNil(o.RequesterEmail) {
		toSerialize["requester_email"] = o.RequesterEmail
	}
	if !IsNil(o.RequesterName) {
		toSerialize["requester_name"] = o.RequesterName
	}
	if !IsNil(o.RetryCount) {
		toSerialize["retry_count"] = o.RetryCount
	}
	toSerialize["sales_created_date"] = o.SalesCreatedDate.Get()
	toSerialize["sales_id"] = o.SalesId.Get()
	if o.SalesOwnerEmail.IsSet() {
		toSerialize["sales_owner_email"] = o.SalesOwnerEmail.Get()
	}
	if o.SalesOwnerName.IsSet() {
		toSerialize["sales_owner_name"] = o.SalesOwnerName.Get()
	}
	toSerialize["services"] = o.Services
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["workshop"] = o.Workshop.Get()
	toSerialize["workshop_id"] = o.WorkshopId.Get()
	toSerialize["workshop_override_password"] = o.WorkshopOverridePassword.Get()

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DeploymentUpdate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bastion_operating_system",
		"cluster",
		"created",
		"experience",
		"garage_id",
		"gpu_alias",
		"gpu_count",
		"gpu_model",
		"gpu_os_name",
		"gpu_os_release",
		"gpu_os_version",
		"id",
		"lifetime",
		"min_gpu_count",
		"modified",
		"node_count",
		"oem_name",
		"overrides",
		"pipelines",
		"priority",
		"provider_name",
		"public_key",
		"region",
		"request_id",
		"sales_created_date",
		"sales_id",
		"services",
		"workshop",
		"workshop_id",
		"workshop_override_password",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeploymentUpdate := _DeploymentUpdate{}

	err = json.Unmarshal(data, &varDeploymentUpdate)

	if err != nil {
		return err
	}

	*o = DeploymentUpdate(varDeploymentUpdate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "bastion_operating_system")
		delete(additionalProperties, "cluster")
		delete(additionalProperties, "collection_branch")
		delete(additionalProperties, "created")
		delete(additionalProperties, "experience")
		delete(additionalProperties, "experience_branch")
		delete(additionalProperties, "expires_at")
		delete(additionalProperties, "flightcontrol_release")
		delete(additionalProperties, "garage_id")
		delete(additionalProperties, "gc_branch")
		delete(additionalProperties, "gpu_alias")
		delete(additionalProperties, "gpu_count")
		delete(additionalProperties, "gpu_model")
		delete(additionalProperties, "gpu_os_name")
		delete(additionalProperties, "gpu_os_release")
		delete(additionalProperties, "gpu_os_version")
		delete(additionalProperties, "id")
		delete(additionalProperties, "ip_allowlist")
		delete(additionalProperties, "lifetime")
		delete(additionalProperties, "min_gpu_count")
		delete(additionalProperties, "modified")
		delete(additionalProperties, "node_count")
		delete(additionalProperties, "oem_name")
		delete(additionalProperties, "org_name")
		delete(additionalProperties, "overrides")
		delete(additionalProperties, "persist_on_failure")
		delete(additionalProperties, "persona")
		delete(additionalProperties, "pipeline")
		delete(additionalProperties, "pipeline_branch")
		delete(additionalProperties, "pipelines")
		delete(additionalProperties, "platform")
		delete(additionalProperties, "priority")
		delete(additionalProperties, "provider_name")
		delete(additionalProperties, "public_key")
		delete(additionalProperties, "region")
		delete(additionalProperties, "request_id")
		delete(additionalProperties, "requester_email")
		delete(additionalProperties, "requester_name")
		delete(additionalProperties, "retry_count")
		delete(additionalProperties, "sales_created_date")
		delete(additionalProperties, "sales_id")
		delete(additionalProperties, "sales_owner_email")
		delete(additionalProperties, "sales_owner_name")
		delete(additionalProperties, "services")
		delete(additionalProperties, "state")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "workshop")
		delete(additionalProperties, "workshop_id")
		delete(additionalProperties, "workshop_override_password")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDeploymentUpdate struct {
	value *DeploymentUpdate
	isSet bool
}

func (v NullableDeploymentUpdate) Get() *DeploymentUpdate {
	return v.value
}

func (v *NullableDeploymentUpdate) Set(val *DeploymentUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentUpdate(val *DeploymentUpdate) *NullableDeploymentUpdate {
	return &NullableDeploymentUpdate{value: val, isSet: true}
}

func (v NullableDeploymentUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
