/*
NVIDIA LaunchPad API

RESTful API for interacting with the NVIDIA LaunchPad platform

API version: 2.36.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the GpuBulkUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GpuBulkUpdate{}

// GpuBulkUpdate struct for GpuBulkUpdate
type GpuBulkUpdate struct {
	// Timestamp of when the object was created
	Created time.Time `json:"created"`
	// GPU form factor  * `pcie` - PCIe * `sxm` - SXM
	FormFactor *InterconnectionTypeEnum `json:"form_factor,omitempty"`
	Id         string                   `json:"id"`
	// Total GPU memory (in GB)
	Memory *int32 `json:"memory,omitempty"`
	// GPU model name
	Model string `json:"model"`
	// Timestamp of when the object was last modified
	Modified  time.Time `json:"modified"`
	NodeCount int32     `json:"node_count"`
	// Weighted preference to use in selecting a GPU for a deployment. A higher priority means the GPU is in higher demand. Lower priority values will be preferred over higher ones during cluster selection.
	Priority             *int32   `json:"priority,omitempty"`
	Count                int32    `json:"count"`
	Ids                  []string `json:"ids"`
	Result               string   `json:"result"`
	AdditionalProperties map[string]interface{}
}

type _GpuBulkUpdate GpuBulkUpdate

// NewGpuBulkUpdate instantiates a new GpuBulkUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGpuBulkUpdate(created time.Time, id string, model string, modified time.Time, nodeCount int32, count int32, ids []string, result string) *GpuBulkUpdate {
	this := GpuBulkUpdate{}
	this.Created = created
	var formFactor InterconnectionTypeEnum = InterconnectionTypePCIe
	this.FormFactor = &formFactor
	this.Id = id
	var memory int32 = 0
	this.Memory = &memory
	this.Model = model
	this.Modified = modified
	this.NodeCount = nodeCount
	this.Count = count
	this.Ids = ids
	this.Result = result
	return &this
}

// NewGpuBulkUpdateWithDefaults instantiates a new GpuBulkUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGpuBulkUpdateWithDefaults() *GpuBulkUpdate {
	this := GpuBulkUpdate{}
	var formFactor InterconnectionTypeEnum = InterconnectionTypePCIe
	this.FormFactor = &formFactor
	var memory int32 = 0
	this.Memory = &memory
	return &this
}

// GetCreated returns the Created field value
func (o *GpuBulkUpdate) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *GpuBulkUpdate) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *GpuBulkUpdate) SetCreated(v time.Time) {
	o.Created = v
}

// GetFormFactor returns the FormFactor field value if set, zero value otherwise.
func (o *GpuBulkUpdate) GetFormFactor() InterconnectionTypeEnum {
	if o == nil || IsNil(o.FormFactor) {
		var ret InterconnectionTypeEnum
		return ret
	}
	return *o.FormFactor
}

// GetFormFactorOk returns a tuple with the FormFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpuBulkUpdate) GetFormFactorOk() (*InterconnectionTypeEnum, bool) {
	if o == nil || IsNil(o.FormFactor) {
		return nil, false
	}
	return o.FormFactor, true
}

// HasFormFactor returns a boolean if a field has been set.
func (o *GpuBulkUpdate) HasFormFactor() bool {
	if o != nil && !IsNil(o.FormFactor) {
		return true
	}

	return false
}

// SetFormFactor gets a reference to the given InterconnectionTypeEnum and assigns it to the FormFactor field.
func (o *GpuBulkUpdate) SetFormFactor(v InterconnectionTypeEnum) {
	o.FormFactor = &v
}

// GetId returns the Id field value
func (o *GpuBulkUpdate) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GpuBulkUpdate) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GpuBulkUpdate) SetId(v string) {
	o.Id = v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *GpuBulkUpdate) GetMemory() int32 {
	if o == nil || IsNil(o.Memory) {
		var ret int32
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpuBulkUpdate) GetMemoryOk() (*int32, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *GpuBulkUpdate) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given int32 and assigns it to the Memory field.
func (o *GpuBulkUpdate) SetMemory(v int32) {
	o.Memory = &v
}

// GetModel returns the Model field value
func (o *GpuBulkUpdate) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *GpuBulkUpdate) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *GpuBulkUpdate) SetModel(v string) {
	o.Model = v
}

// GetModified returns the Modified field value
func (o *GpuBulkUpdate) GetModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value
// and a boolean to check if the value has been set.
func (o *GpuBulkUpdate) GetModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modified, true
}

// SetModified sets field value
func (o *GpuBulkUpdate) SetModified(v time.Time) {
	o.Modified = v
}

// GetNodeCount returns the NodeCount field value
func (o *GpuBulkUpdate) GetNodeCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NodeCount
}

// GetNodeCountOk returns a tuple with the NodeCount field value
// and a boolean to check if the value has been set.
func (o *GpuBulkUpdate) GetNodeCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeCount, true
}

// SetNodeCount sets field value
func (o *GpuBulkUpdate) SetNodeCount(v int32) {
	o.NodeCount = v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *GpuBulkUpdate) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpuBulkUpdate) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *GpuBulkUpdate) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *GpuBulkUpdate) SetPriority(v int32) {
	o.Priority = &v
}

// GetCount returns the Count field value
func (o *GpuBulkUpdate) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *GpuBulkUpdate) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *GpuBulkUpdate) SetCount(v int32) {
	o.Count = v
}

// GetIds returns the Ids field value
func (o *GpuBulkUpdate) GetIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value
// and a boolean to check if the value has been set.
func (o *GpuBulkUpdate) GetIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ids, true
}

// SetIds sets field value
func (o *GpuBulkUpdate) SetIds(v []string) {
	o.Ids = v
}

// GetResult returns the Result field value
func (o *GpuBulkUpdate) GetResult() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *GpuBulkUpdate) GetResultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *GpuBulkUpdate) SetResult(v string) {
	o.Result = v
}

func (o GpuBulkUpdate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GpuBulkUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created"] = o.Created
	if !IsNil(o.FormFactor) {
		toSerialize["form_factor"] = o.FormFactor
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	toSerialize["model"] = o.Model
	toSerialize["modified"] = o.Modified
	toSerialize["node_count"] = o.NodeCount
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	toSerialize["count"] = o.Count
	toSerialize["ids"] = o.Ids
	toSerialize["result"] = o.Result

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GpuBulkUpdate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created",
		"id",
		"model",
		"modified",
		"node_count",
		"count",
		"ids",
		"result",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGpuBulkUpdate := _GpuBulkUpdate{}

	err = json.Unmarshal(data, &varGpuBulkUpdate)

	if err != nil {
		return err
	}

	*o = GpuBulkUpdate(varGpuBulkUpdate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "created")
		delete(additionalProperties, "form_factor")
		delete(additionalProperties, "id")
		delete(additionalProperties, "memory")
		delete(additionalProperties, "model")
		delete(additionalProperties, "modified")
		delete(additionalProperties, "node_count")
		delete(additionalProperties, "priority")
		delete(additionalProperties, "count")
		delete(additionalProperties, "ids")
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGpuBulkUpdate struct {
	value *GpuBulkUpdate
	isSet bool
}

func (v NullableGpuBulkUpdate) Get() *GpuBulkUpdate {
	return v.value
}

func (v *NullableGpuBulkUpdate) Set(val *GpuBulkUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableGpuBulkUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableGpuBulkUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGpuBulkUpdate(val *GpuBulkUpdate) *NullableGpuBulkUpdate {
	return &NullableGpuBulkUpdate{value: val, isSet: true}
}

func (v NullableGpuBulkUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGpuBulkUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
