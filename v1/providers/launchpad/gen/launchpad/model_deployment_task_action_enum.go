/*
NVIDIA LaunchPad API

RESTful API for interacting with the NVIDIA LaunchPad platform

API version: 2.36.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// DeploymentTaskActionEnum * `start_instances` - Start all instances in the deployment * `stop_instances` - Stop all instances in the deployment
type DeploymentTaskActionEnum string

// List of DeploymentTaskActionEnum
const (
	DeploymentTaskActionStartInstances DeploymentTaskActionEnum = "start_instances"
	DeploymentTaskActionStopInstances  DeploymentTaskActionEnum = "stop_instances"
)

// All allowed values of DeploymentTaskActionEnum enum
var AllowedDeploymentTaskActionEnumEnumValues = []DeploymentTaskActionEnum{
	"start_instances",
	"stop_instances",
}

func (v *DeploymentTaskActionEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DeploymentTaskActionEnum(value)
	for _, existing := range AllowedDeploymentTaskActionEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DeploymentTaskActionEnum", value)
}

// NewDeploymentTaskActionEnumFromValue returns a pointer to a valid DeploymentTaskActionEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDeploymentTaskActionEnumFromValue(v string) (*DeploymentTaskActionEnum, error) {
	ev := DeploymentTaskActionEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DeploymentTaskActionEnum: valid values are %v", v, AllowedDeploymentTaskActionEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DeploymentTaskActionEnum) IsValid() bool {
	for _, existing := range AllowedDeploymentTaskActionEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DeploymentTaskActionEnum value
func (v DeploymentTaskActionEnum) Ptr() *DeploymentTaskActionEnum {
	return &v
}

type NullableDeploymentTaskActionEnum struct {
	value *DeploymentTaskActionEnum
	isSet bool
}

func (v NullableDeploymentTaskActionEnum) Get() *DeploymentTaskActionEnum {
	return v.value
}

func (v *NullableDeploymentTaskActionEnum) Set(val *DeploymentTaskActionEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentTaskActionEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentTaskActionEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentTaskActionEnum(val *DeploymentTaskActionEnum) *NullableDeploymentTaskActionEnum {
	return &NullableDeploymentTaskActionEnum{value: val, isSet: true}
}

func (v NullableDeploymentTaskActionEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentTaskActionEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
