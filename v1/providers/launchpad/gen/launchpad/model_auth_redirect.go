/*
NVIDIA LaunchPad API

RESTful API for interacting with the NVIDIA LaunchPad platform

API version: 2.36.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the AuthRedirect type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthRedirect{}

// AuthRedirect struct for AuthRedirect
type AuthRedirect struct {
	Redirect             string `json:"redirect"`
	AdditionalProperties map[string]interface{}
}

type _AuthRedirect AuthRedirect

// NewAuthRedirect instantiates a new AuthRedirect object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthRedirect(redirect string) *AuthRedirect {
	this := AuthRedirect{}
	this.Redirect = redirect
	return &this
}

// NewAuthRedirectWithDefaults instantiates a new AuthRedirect object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthRedirectWithDefaults() *AuthRedirect {
	this := AuthRedirect{}
	return &this
}

// GetRedirect returns the Redirect field value
func (o *AuthRedirect) GetRedirect() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Redirect
}

// GetRedirectOk returns a tuple with the Redirect field value
// and a boolean to check if the value has been set.
func (o *AuthRedirect) GetRedirectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Redirect, true
}

// SetRedirect sets field value
func (o *AuthRedirect) SetRedirect(v string) {
	o.Redirect = v
}

func (o AuthRedirect) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthRedirect) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["redirect"] = o.Redirect

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AuthRedirect) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"redirect",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAuthRedirect := _AuthRedirect{}

	err = json.Unmarshal(data, &varAuthRedirect)

	if err != nil {
		return err
	}

	*o = AuthRedirect(varAuthRedirect)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "redirect")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAuthRedirect struct {
	value *AuthRedirect
	isSet bool
}

func (v NullableAuthRedirect) Get() *AuthRedirect {
	return v.value
}

func (v *NullableAuthRedirect) Set(val *AuthRedirect) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthRedirect) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthRedirect) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthRedirect(val *AuthRedirect) *NullableAuthRedirect {
	return &NullableAuthRedirect{value: val, isSet: true}
}

func (v NullableAuthRedirect) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthRedirect) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
